{
  "id": "CVE-2024-37166",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-06-10T22:15:12.187",
  "lastModified": "2024-11-21T09:23:20.727",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "ghtml is software that uses tagged templates for template engine functionality. It is possible to introduce user-controlled JavaScript code and trigger a Cross-Site Scripting (XSS) vulnerability in some cases. Version 2.0.0 introduces changes to mitigate this issue. Version 2.0.0 contains updated documentation to clarify that while ghtml escapes characters with special meaning in HTML, it does not provide comprehensive protection against all types of XSS attacks in every scenario. This aligns with the approach taken by other template engines. Developers should be cautious and take additional measures to sanitize user input and prevent potential vulnerabilities. Additionally, the backtick character (`) is now also escaped to prevent the creation of strings in most cases where a malicious actor somehow gains the ability to write JavaScript. This does not provide comprehensive protection either."
    },
    {
      "lang": "es",
      "value": "ghtml es un software que utiliza plantillas etiquetadas para la funcionalidad del motor de plantillas. Es posible introducir código JavaScript controlado por el usuario y desencadenar una vulnerabilidad de Cross-Site Scripting (XSS) en algunos casos. La versión 2.0.0 introduce cambios para mitigar este problema. La versión 2.0.0 contiene documentación actualizada para aclarar que, si bien ghtml escapa de caracteres con significado especial en HTML, no proporciona una protección integral contra todos los tipos de ataques XSS en todos los escenarios. Esto se alinea con el enfoque adoptado por otros motores de plantillas. Los desarrolladores deben ser cautelosos y tomar medidas adicionales para sanitizar la entrada de los usuarios y prevenir posibles vulnerabilidades. Además, el carácter de comilla invertida (`) ahora también se escapa para evitar la creación de cadenas en la mayoría de los casos en los que un actor malicioso de alguna manera obtiene la capacidad de escribir JavaScript. Esto tampoco proporciona una protección integral."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:L",
          "baseScore": 8.9,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "REQUIRED",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "LOW"
        },
        "exploitabilityScore": 2.3,
        "impactScore": 6.0
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        },
        {
          "lang": "en",
          "value": "CWE-80"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/gurgunday/ghtml/commit/df1ea50fe8968a766fd2b9379a8f9806375227f8",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/gurgunday/ghtml/security/advisories/GHSA-vvhj-v88f-5gxr",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/gurgunday/ghtml/commit/df1ea50fe8968a766fd2b9379a8f9806375227f8",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "https://github.com/gurgunday/ghtml/security/advisories/GHSA-vvhj-v88f-5gxr",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}