{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-37995",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/31d8df3f303c3ae9115230820977ef8c35c88808",
          "name": "https://git.kernel.org/stable/c/31d8df3f303c3ae9115230820977ef8c35c88808",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/9e7b49ce4f9d0cb5b6e87db9e07a2fb9e754b0dd",
          "name": "https://git.kernel.org/stable/c/9e7b49ce4f9d0cb5b6e87db9e07a2fb9e754b0dd",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/a6aeb739974ec73e5217c75a7c008a688d3d5cf1",
          "name": "https://git.kernel.org/stable/c/a6aeb739974ec73e5217c75a7c008a688d3d5cf1",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/d63851049f412cdfadaeef7a7eaef5031d11c1e9",
          "name": "https://git.kernel.org/stable/c/d63851049f412cdfadaeef7a7eaef5031d11c1e9",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/f1c71b4bd721a4ea21da408806964b10468623f2",
          "name": "https://git.kernel.org/stable/c/f1c71b4bd721a4ea21da408806964b10468623f2",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/faa9059631d3491d699c69ecf512de9e1a3d6649",
          "name": "https://git.kernel.org/stable/c/faa9059631d3491d699c69ecf512de9e1a3d6649",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmodule: ensure that kobject_put() is safe for module type kobjects\n\nIn 'lookup_or_create_module_kobject()', an internal kobject is created\nusing 'module_ktype'. So call to 'kobject_put()' on error handling\npath causes an attempt to use an uninitialized completion pointer in\n'module_kobject_release()'. In this scenario, we just want to release\nkobject without an extra synchronization required for a regular module\nunloading process, so adding an extra check whether 'complete()' is\nactually required makes 'kobject_put()' safe."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-05-29T14:15Z",
  "lastModifiedDate": "2025-05-29T14:15Z"
}