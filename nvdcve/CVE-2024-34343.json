{
  "id": "CVE-2024-34343",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-08-05T21:15:38.257",
  "lastModified": "2024-09-19T19:57:52.007",
  "vulnStatus": "Analyzed",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "Nuxt is a free and open-source framework to create full-stack web applications and websites with Vue.js. The `navigateTo` function attempts to blockthe `javascript:` protocol, but does not correctly use API's provided by `unjs/ufo`. This library also contains parsing discrepancies.  The function first tests to see if the specified URL has a protocol. This uses the unjs/ufo package for URL parsing. This function works effectively, and returns true for a javascript: protocol. After this, the URL is parsed using the parseURL function. This function will refuse to parse poorly formatted URLs. Parsing javascript:alert(1) returns null/\"\" for all values. Next, the protocol of the URL is then checked using the isScriptProtocol function. This function simply checks the input against a list of protocols, and does not perform any parsing. The combination of refusing to parse poorly formatted URLs, and not performing additional parsing means that script checks fail as no protocol can be found. Even if a protocol was identified, whitespace is not stripped in the parseURL implementation, bypassing the isScriptProtocol checks. Certain special protocols are identified at the top of parseURL. Inserting a newline or tab into this sequence will block the special protocol check, and bypass the latter checks. This ONLY has impact after SSR has occured, the `javascript:` protocol within a location header does not trigger XSS. This issue has been addressed in release version 3.12.4 and all users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
      "lang": "es",
      "value": "Nuxt es un framework gratuito y de código abierto para crear sitios web y aplicaciones web completos con Vue.js. La función `navigateTo` intenta bloquear el protocolo `javascript:`, pero no utiliza correctamente las API proporcionadas por `unjs/ufo`. Esta biblioteca también contiene discrepancias en el análisis. La función primero prueba para ver si la URL especificada tiene un protocolo. Esto utiliza el paquete unjs/ufo para el análisis de URL. Esta función funciona de manera efectiva y devuelve verdadero para un protocolo javascript:. Después de esto, la URL se analiza utilizando la función parseURL. Esta función se negará a analizar URL mal formateadas. El análisis de javascript:alert(1) devuelve null/\"\" para todos los valores. A continuación, se verifica el protocolo de la URL utilizando la función isScriptProtocol. Esta función simplemente compara la entrada con una lista de protocolos y no realiza ningún análisis. La combinación de negarse a analizar URL mal formateadas y no realizar análisis adicionales significa que las comprobaciones de secuencias de comandos fallan porque no se puede encontrar ningún protocolo. Incluso si se identificó un protocolo, los espacios en blanco no se eliminan en la implementación de parseURL, evitando las comprobaciones de isScriptProtocol. Ciertos protocolos especiales se identifican en la parte superior de parseURL. Insertar una nueva línea o una pestaña en esta secuencia bloqueará la verificación del protocolo especial y omitirá las últimas comprobaciones. Esto SÓLO tiene impacto después de que se haya producido SSR, el protocolo `javascript:` dentro de un encabezado de ubicación no activa XSS. Este problema se solucionó en la versión 3.12.4 y se recomienda a todos los usuarios que actualicen. No se conocen workarounds para esta vulnerabilidad."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L",
          "baseScore": 6.3,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "REQUIRED",
          "scope": "UNCHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "LOW",
          "availabilityImpact": "LOW"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 3.4
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "baseScore": 6.1,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "REQUIRED",
          "scope": "CHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "LOW",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 2.7
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:nuxt:nuxt:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "3.12.4",
              "matchCriteriaId": "BB92C785-9011-406E-A048-9FEC653045EC"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/nuxt/nuxt/security/advisories/GHSA-vf6r-87q4-2vjf",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Third Party Advisory"
      ]
    }
  ]
}