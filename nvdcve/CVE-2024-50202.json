{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2024-50202",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [

          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/c1d0476885d708a932980b0f28cd90d9bd71db39",
          "name": "https://git.kernel.org/stable/c/c1d0476885d708a932980b0f28cd90d9bd71db39",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/edf8146057264191d5bfe5b91773f13d936dadd3",
          "name": "https://git.kernel.org/stable/c/edf8146057264191d5bfe5b91773f13d936dadd3",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/270a6f9df35fa2aea01ec23770dc9b3fc9a12989",
          "name": "https://git.kernel.org/stable/c/270a6f9df35fa2aea01ec23770dc9b3fc9a12989",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/9698088ac7704e260f492d9c254e29ed7dd8729a",
          "name": "https://git.kernel.org/stable/c/9698088ac7704e260f492d9c254e29ed7dd8729a",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/efa810b15a25531cbc2f527330947b9fe16916e7",
          "name": "https://git.kernel.org/stable/c/efa810b15a25531cbc2f527330947b9fe16916e7",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/08cfa12adf888db98879dbd735bc741360a34168",
          "name": "https://git.kernel.org/stable/c/08cfa12adf888db98879dbd735bc741360a34168",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/bb857ae1efd3138c653239ed1e7aef14e1242c81",
          "name": "https://git.kernel.org/stable/c/bb857ae1efd3138c653239ed1e7aef14e1242c81",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/b4b3dc9e7e604be98a222e9f941f5e93798ca475",
          "name": "https://git.kernel.org/stable/c/b4b3dc9e7e604be98a222e9f941f5e93798ca475",
          "refsource": "",
          "tags": [

          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnilfs2: propagate directory read errors from nilfs_find_entry()\n\nSyzbot reported that a task hang occurs in vcs_open() during a fuzzing\ntest for nilfs2.\n\nThe root cause of this problem is that in nilfs_find_entry(), which\nsearches for directory entries, ignores errors when loading a directory\npage/folio via nilfs_get_folio() fails.\n\nIf the filesystem images is corrupted, and the i_size of the directory\ninode is large, and the directory page/folio is successfully read but\nfails the sanity check, for example when it is zero-filled,\nnilfs_check_folio() may continue to spit out error messages in bursts.\n\nFix this issue by propagating the error to the callers when loading a\npage/folio fails in nilfs_find_entry().\n\nThe current interface of nilfs_find_entry() and its callers is outdated\nand cannot propagate error codes such as -EIO and -ENOMEM returned via\nnilfs_find_entry(), so fix it together."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [

    ]
  },
  "impact": {
  },
  "publishedDate": "2024-11-08T06:15Z",
  "lastModifiedDate": "2024-11-08T19:01Z"
}