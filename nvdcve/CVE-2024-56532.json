{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2024-56532",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/020cbc4d7414f0962004213e2b7bc5cc607e9ec7",
          "name": "https://git.kernel.org/stable/c/020cbc4d7414f0962004213e2b7bc5cc607e9ec7",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/2938dd2648522336133c151dd67bb9bf01cbd390",
          "name": "https://git.kernel.org/stable/c/2938dd2648522336133c151dd67bb9bf01cbd390",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/75f418b249d84021865eaa59515d3ed9b75ce4d6",
          "name": "https://git.kernel.org/stable/c/75f418b249d84021865eaa59515d3ed9b75ce4d6",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/9a48bd2184b142c92a4e17eac074c61fcf975bc9",
          "name": "https://git.kernel.org/stable/c/9a48bd2184b142c92a4e17eac074c61fcf975bc9",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/9b27924dc8d7f8a8c35e521287d4ccb9a006e597",
          "name": "https://git.kernel.org/stable/c/9b27924dc8d7f8a8c35e521287d4ccb9a006e597",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/9d5c530e4d70f64b1114f2cc29ac690ba7ac4a38",
          "name": "https://git.kernel.org/stable/c/9d5c530e4d70f64b1114f2cc29ac690ba7ac4a38",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/b7df09bb348016943f56b09dcaafe221e3f73947",
          "name": "https://git.kernel.org/stable/c/b7df09bb348016943f56b09dcaafe221e3f73947",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/bc778ad3e495333eebda36fe91d5b2c93109cc16",
          "name": "https://git.kernel.org/stable/c/bc778ad3e495333eebda36fe91d5b2c93109cc16",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/bf0aa35a7cb8602cccf2387712114e836f65c154",
          "name": "https://git.kernel.org/stable/c/bf0aa35a7cb8602cccf2387712114e836f65c154",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: us122l: Use snd_card_free_when_closed() at disconnection\n\nThe USB disconnect callback is supposed to be short and not too-long\nwaiting.  OTOH, the current code uses snd_card_free() at\ndisconnection, but this waits for the close of all used fds, hence it\ncan take long.  It eventually blocks the upper layer USB ioctls, which\nmay trigger a soft lockup.\n\nAn easy workaround is to replace snd_card_free() with\nsnd_card_free_when_closed().  This variant returns immediately while\nthe release of resources is done asynchronously by the card device\nrelease at the last close.\n\nThe loop of us122l->mmap_count check is dropped as well.  The check is\nuseless for the asynchronous operation with *_when_closed()."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2024-12-27T14:15Z",
  "lastModifiedDate": "2024-12-27T14:15Z"
}