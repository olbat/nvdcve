{
  "id": "CVE-2024-9143",
  "sourceIdentifier": "openssl-security@openssl.org",
  "published": "2024-10-16T17:15:18.130",
  "lastModified": "2025-09-01T09:15:34.447",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."
    },
    {
      "lang": "es",
      "value": "Resumen del problema: el uso de las API de curva elíptica GF(2^m) de bajo nivel con valores explícitos no confiables para el campo polinomial puede generar lecturas o escrituras de memoria fuera de los límites. Resumen del impacto: las escrituras de memoria fuera de los límites pueden generar un bloqueo de la aplicación o incluso la posibilidad de una ejecución de código remoto; sin embargo, en todos los protocolos que involucran criptografía de curva elíptica que conocemos, solo se admiten \"curvas con nombre\" o, si se admiten parámetros de curva explícitos, especifican una codificación X9.62 de curvas binarias (GF(2^m)) que no pueden representar valores de entrada problemáticos. Por lo tanto, la probabilidad de existencia de una aplicación vulnerable es baja. En particular, la codificación X9.62 se utiliza para claves ECC en certificados X.509, por lo que no pueden ocurrir entradas problemáticas en el contexto del procesamiento de certificados X.509. Cualquier caso de uso problemático tendría que utilizar una codificación de curva \"exótica\". Las API afectadas incluyen: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params() y varias funciones de soporte BN_GF2m_*(). Las aplicaciones que trabajan con parámetros de curva binarios explícitos \"exóticos\" (GF(2^m)), que permiten representar polinomios de campo no válidos con un término constante cero, a través de las API anteriores o similares, pueden terminar abruptamente como resultado de la lectura o escritura fuera de los límites de la matriz. La ejecución remota de código no se puede descartar fácilmente. Los módulos FIPS en 3.3, 3.2, 3.1 y 3.0 no se ven afectados por este problema."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
          "baseScore": 4.3,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "LOW",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 1.4
      }
    ]
  },
  "weaknesses": [
    {
      "source": "openssl-security@openssl.org",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-125"
        },
        {
          "lang": "en",
          "value": "CWE-787"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/openssl/openssl/commit/72ae83ad214d2eef262461365a1975707f862712",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://github.com/openssl/openssl/commit/bc7e04d7c8d509fb78fc0e285aa948fb0da04700",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://github.com/openssl/openssl/commit/c0d3e4d32d2805f49bec30547f225bc4d092e1f4",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://github.com/openssl/openssl/commit/fdf6723362ca51bd883295efe206cb5b1cfa5154",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://github.openssl.org/openssl/extended-releases/commit/8efc0cbaa8ebba8e116f7b81a876a4123594d86a",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://github.openssl.org/openssl/extended-releases/commit/9d576994cec2b7aa37a91740ea7e680810957e41",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "https://openssl-library.org/news/secadv/20241016.txt",
      "source": "openssl-security@openssl.org"
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2024/10/16/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2024/10/23/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "http://www.openwall.com/lists/oss-security/2024/10/24/1",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "https://security.netapp.com/advisory/ntap-20241101-0001/",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}