{
  "id": "CVE-2024-57947",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-23T14:15:25.293",
  "lastModified": "2025-01-23T14:15:25.293",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_set_pipapo: fix initial map fill\n\nThe initial buffer has to be inited to all-ones, but it must restrict\nit to the size of the first field, not the total field size.\n\nAfter each round in the map search step, the result and the fill map\nare swapped, so if we have a set where f->bsize of the first element\nis smaller than m->bsize_max, those one-bits are leaked into future\nrounds result map.\n\nThis makes pipapo find an incorrect matching results for sets where\nfirst field size is not the largest.\n\nFollowup patch adds a test case to nft_concat_range.sh selftest script.\n\nThanks to Stefano Brivio for pointing out that we need to zero out\nthe remainder explicitly, only correcting memset() argument isn't enough."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: nf_set_pipapo: arregla el relleno inicial del mapa El búfer inicial tiene que ser inicializado a todos unos, pero debe restringirlo al tamaño del primer campo, no al tamaño total del campo. Después de cada ronda en el paso de búsqueda del mapa, el resultado y el mapa de relleno se intercambian, así que si tenemos un conjunto donde f-&gt;bsize del primer elemento es menor que m-&gt;bsize_max, esos unos bits se filtran en el mapa de resultados de rondas futuras. Esto hace que pipapo encuentre resultados coincidentes incorrectos para conjuntos donde el tamaño del primer campo no es el más grande. El parche de seguimiento agrega un caso de prueba al script de autoprueba nft_concat_range.sh. Gracias a Stefano Brivio por señalar que necesitamos poner a cero el resto explícitamente, solo corregir el argumento memset() no es suficiente."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/69b6a67f7052905e928d75a0c5871de50e686986",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/791a615b7ad2258c560f91852be54b0480837c93",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/8058c88ac0df21239daee54b5934d5c80ca9685f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/957a4d1c4c5849e4515c9fb4db21bf85318103dc",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/9625c46ce6fd4f922595a4b32b1de5066d70464f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}