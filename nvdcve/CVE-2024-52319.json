{
  "id": "CVE-2024-52319",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-11T13:15:24.843",
  "lastModified": "2025-01-11T13:15:24.843",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: use aligned address in clear_gigantic_page()\n\nIn current kernel, hugetlb_no_page() calls folio_zero_user() with the\nfault address.  Where the fault address may be not aligned with the huge\npage size.  Then, folio_zero_user() may call clear_gigantic_page() with\nthe address, while clear_gigantic_page() requires the address to be huge\npage size aligned.  So, this may cause memory corruption or information\nleak, addtional, use more obvious naming 'addr_hint' instead of 'addr' for\nclear_gigantic_page()."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm: usar dirección alineada en clear_gigantic_page() En el kernel actual, hugetlb_no_page() llama a folio_zero_user() con la dirección de error. Donde la dirección de error puede no estar alineada con el tamaño de página enorme. Entonces, folio_zero_user() puede llamar a clear_gigantic_page() con la dirección, mientras que clear_gigantic_page() requiere que la dirección esté alineada con el tamaño de página enorme. Por lo tanto, esto puede causar corrupción de memoria o fuga de información. Además, use un nombre más obvio 'addr_hint' en lugar de 'addr' para clear_gigantic_page()."
    }
  ],
  "metrics": {
  },
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/8aca2bc96c833ba695ede7a45ad7784c836a262e",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/b79b6fe0737f233f0be1465052b7f0e75f324735",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}