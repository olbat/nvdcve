{
  "id": "CVE-2025-21647",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-19T11:15:10.307",
  "lastModified": "2025-03-13T13:15:47.797",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: sch_cake: add bounds checks to host bulk flow fairness counts\n\nEven though we fixed a logic error in the commit cited below, syzbot\nstill managed to trigger an underflow of the per-host bulk flow\ncounters, leading to an out of bounds memory access.\n\nTo avoid any such logic errors causing out of bounds memory accesses,\nthis commit factors out all accesses to the per-host bulk flow counters\nto a series of helpers that perform bounds-checking before any\nincrements and decrements. This also has the benefit of improving\nreadability by moving the conditional checks for the flow mode into\nthese helpers, instead of having them spread out throughout the\ncode (which was the cause of the original logic error).\n\nAs part of this change, the flow quantum calculation is consolidated\ninto a helper function, which means that the dithering applied to the\nost load scaling is now applied both in the DRR rotation and when a\nsparse flow's quantum is first initiated. The only user-visible effect\nof this is that the maximum packet size that can be sent while a flow\nstays sparse will now vary with +/- one byte in some cases. This should\nnot make a noticeable difference in practice, and thus it's not worth\ncomplicating the code to preserve the old behaviour."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: sched: sch_cake: agregar comprobaciones de los límites a los recuentos de equidad de flujo masivo del host Aunque arreglamos un error lógico en el commit citada a continuación, syzbot aún logró activar un desbordamiento de los contadores de flujo masivo por host, lo que provocó un acceso a la memoria fuera de los límites. Para evitar que dichos errores lógicos provoquen accesos a la memoria fuera de los límites, esta confirmación elimina todos los accesos a los contadores de flujo masivo por host a una serie de ayudantes que realizan la comprobación de los límites antes de cualquier incremento o decremento. Esto también tiene el beneficio de mejorar la legibilidad al mover las comprobaciones condicionales para el modo de flujo a estos ayudantes, en lugar de tenerlas distribuidas por todo el código (que era la causa del error lógico original). Como parte de este cambio, el cálculo cuántico de flujo se consolida en una función auxiliar, lo que significa que el tramado aplicado al escalamiento de carga ost ahora se aplica tanto en la rotación DRR como cuando se inicia por primera vez el cuántico de un flujo disperso. El único efecto visible para el usuario es que el tamaño máximo de paquete que se puede enviar mientras un flujo permanece disperso variará ahora en +/- un byte en algunos casos. Esto no debería suponer una diferencia notable en la práctica y, por lo tanto, no vale la pena complicar el código para conservar el comportamiento anterior."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/27202e2e8721c3b23831563c36ed5ac7818641ba",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/44fe1efb4961c1a5ccab16bb579dfc6b308ad58b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/737d4d91d35b5f7fa5bb442651472277318b0bfd",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/91bb18950b88f955838ec0c1d97f74d135756dc7",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/a777e06dfc72bed73c05dcb437d7c27ad5f90f3f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/b1a1743aaa4906c41c426eda97e2e2586f79246d",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/bb0245fa72b783cb23a9949c5048781341e91423",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}