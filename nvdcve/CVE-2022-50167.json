{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2022-50167",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/063e092534d4c6785228e5b1eb6e9329f66ccbe4",
          "name": "https://git.kernel.org/stable/c/063e092534d4c6785228e5b1eb6e9329f66ccbe4",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/3c7256b880b3a5aa1895fd169a34aa4224a11862",
          "name": "https://git.kernel.org/stable/c/3c7256b880b3a5aa1895fd169a34aa4224a11862",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/87ac0d600943994444e24382a87aa19acc4cd3d4",
          "name": "https://git.kernel.org/stable/c/87ac0d600943994444e24382a87aa19acc4cd3d4",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: fix potential 32-bit overflow when accessing ARRAY map element\n\nIf BPF array map is bigger than 4GB, element pointer calculation can\noverflow because both index and elem_size are u32. Fix this everywhere\nby forcing 64-bit multiplication. Extract this formula into separate\nsmall helper and use it consistently in various places.\n\nSpeculative-preventing formula utilizing index_mask trick is left as is,\nbut explicit u64 casts are added in both places."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-06-18T11:15Z",
  "lastModifiedDate": "2025-06-18T13:47Z"
}