{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-38131",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/31028812724cef7bd57a51525ce58a32a6d73b22",
          "name": "https://git.kernel.org/stable/c/31028812724cef7bd57a51525ce58a32a6d73b22",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/408c97c4a5e0b634dcd15bf8b8808b382e888164",
          "name": "https://git.kernel.org/stable/c/408c97c4a5e0b634dcd15bf8b8808b382e888164",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/b3b4efa2e623aecaebd7c9b9e4171f5c659e9724",
          "name": "https://git.kernel.org/stable/c/b3b4efa2e623aecaebd7c9b9e4171f5c659e9724",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/dfe8224c9c7a43d356eb9f74b06868aa05f90223",
          "name": "https://git.kernel.org/stable/c/dfe8224c9c7a43d356eb9f74b06868aa05f90223",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/ed42ee1ed05ff2f4c36938379057413a40c56680",
          "name": "https://git.kernel.org/stable/c/ed42ee1ed05ff2f4c36938379057413a40c56680",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ncoresight: prevent deactivate active config while enabling the config\n\nWhile enable active config via cscfg_csdev_enable_active_config(),\nactive config could be deactivated via configfs' sysfs interface.\nThis could make UAF issue in below scenario:\n\nCPU0                                          CPU1\n(sysfs enable)                                load module\n                                              cscfg_load_config_sets()\n                                              activate config. // sysfs\n                                              (sys_active_cnt == 1)\n...\ncscfg_csdev_enable_active_config()\nlock(csdev->cscfg_csdev_lock)\n// here load config activate by CPU1\nunlock(csdev->cscfg_csdev_lock)\n\n                                              deactivate config // sysfs\n                                              (sys_activec_cnt == 0)\n                                              cscfg_unload_config_sets()\n                                              unload module\n\n// access to config_desc which freed\n// while unloading module.\ncscfg_csdev_enable_config\n\nTo address this, use cscfg_config_desc's active_cnt as a reference count\n which will be holded when\n    - activate the config.\n    - enable the activated config.\nand put the module reference when config_active_cnt == 0."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-07-03T09:15Z",
  "lastModifiedDate": "2025-07-03T09:15Z"
}