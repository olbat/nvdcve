{
  "id": "CVE-2025-24787",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-02-06T19:15:20.213",
  "lastModified": "2025-02-06T20:15:40.840",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "WhoDB is an open source database management tool. In affected versions the application is vulnerable to parameter injection in database connection strings, which allows an attacker to read local files on the machine the application is running on. The application uses string concatenation to build database connection URIs which are then passed to corresponding libraries responsible for setting up the database connections. This string concatenation is done unsafely and without escaping or encoding the user input. This allows an user, in many cases, to inject arbitrary parameters into the URI string. These parameters can be potentially dangerous depending on the libraries used. One of these dangerous parameters is `allowAllFiles` in the library `github.com/go-sql-driver/mysql`. Should this be set to `true`, the library enables running the `LOAD DATA LOCAL INFILE` query on any file on the host machine (in this case, the machine that WhoDB is running on). By injecting `&allowAllFiles=true` into the connection URI and connecting to any MySQL server (such as an attacker-controlled one), the attacker is able to read local files. This issue has been addressed in version 0.45.0 and all users are advised to upgrade. There are no known workarounds for this vulnerability."
    },
    {
      "lang": "es",
      "value": "WhoDB es una herramienta de gestión de bases de datos de código abierto. En las versiones afectadas, la aplicación es vulnerable a la inyección de parámetros en las cadenas de conexión de la base de datos, lo que permite a un atacante leer archivos locales en la máquina en la que se ejecuta la aplicación. La aplicación utiliza la concatenación de cadenas para crear las URI de conexión a la base de datos que luego se pasan a las librerías correspondientes responsables de configurar las conexiones a la base de datos. Esta concatenación de cadenas se realiza de forma insegura y sin escapar ni codificar la entrada del usuario. Esto permite a un usuario, en muchos casos, inyectar parámetros arbitrarios en la cadena URI. Estos parámetros pueden ser potencialmente peligrosos según las librerías utilizadas. Uno de estos parámetros peligrosos es `allowAllFiles` en la librería `github.com/go-sql-driver/mysql`. Si se establece en `true`, la librería permite ejecutar la consulta `LOAD DATA LOCAL INFILE` en cualquier archivo en la máquina host (en este caso, la máquina en la que se ejecuta WhoDB). Al inyectar `&amp;allowAllFiles=true` en la URI de conexión y conectarse a cualquier servidor MySQL (como uno controlado por el atacante), el atacante puede leer archivos locales. Este problema se ha solucionado en la versión 0.45.0 y se recomienda a todos los usuarios que actualicen la versión. No se conocen workarounds para esta vulnerabilidad."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:N/A:N",
          "baseScore": 8.6,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "NONE",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 4.0
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-943"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/go-sql-driver/mysql/blob/7403860363ca112af503b4612568c3096fecb466/infile.go#L128",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/clidey/whodb/security/advisories/GHSA-c7w4-9wv8-7x7c",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0"
    }
  ]
}