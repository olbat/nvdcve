{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-37856",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/185fd73e5ac06027c4be9a129e59193f6a3ef202",
          "name": "https://git.kernel.org/stable/c/185fd73e5ac06027c4be9a129e59193f6a3ef202",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/7511e29cf1355b2c47d0effb39e463119913e2f6",
          "name": "https://git.kernel.org/stable/c/7511e29cf1355b2c47d0effb39e463119913e2f6",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/909e60fb469d4101c6b08cf6e622efb062bb24a1",
          "name": "https://git.kernel.org/stable/c/909e60fb469d4101c6b08cf6e622efb062bb24a1",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/bf089c4d1141b27332c092b1dcca5022c415a3b6",
          "name": "https://git.kernel.org/stable/c/bf089c4d1141b27332c092b1dcca5022c415a3b6",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: harden block_group::bg_list against list_del() races\n\nAs far as I can tell, these calls of list_del_init() on bg_list cannot\nrun concurrently with btrfs_mark_bg_unused() or btrfs_mark_bg_to_reclaim(),\nas they are in transaction error paths and situations where the block\ngroup is readonly.\n\nHowever, if there is any chance at all of racing with mark_bg_unused(),\nor a different future user of bg_list, better to be safe than sorry.\n\nOtherwise we risk the following interleaving (bg_list refcount in parens)\n\nT1 (some random op)                       T2 (btrfs_mark_bg_unused)\n                                        !list_empty(&bg->bg_list); (1)\nlist_del_init(&bg->bg_list); (1)\n                                        list_move_tail (1)\nbtrfs_put_block_group (0)\n                                        btrfs_delete_unused_bgs\n                                             bg = list_first_entry\n                                             list_del_init(&bg->bg_list);\n                                             btrfs_put_block_group(bg); (-1)\n\nUltimately, this results in a broken ref count that hits zero one deref\nearly and the real final deref underflows the refcount, resulting in a WARNING."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-05-09T07:16Z",
  "lastModifiedDate": "2025-05-12T17:32Z"
}