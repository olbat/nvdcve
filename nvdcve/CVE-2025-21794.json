{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-21794",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/0b43d98ff29be3144e86294486b1373b5df74c0e",
          "name": "https://git.kernel.org/stable/c/0b43d98ff29be3144e86294486b1373b5df74c0e",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/436f48c864186e9413d1b7c6e91767cc9e1a65b8",
          "name": "https://git.kernel.org/stable/c/436f48c864186e9413d1b7c6e91767cc9e1a65b8",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/73e36a699b9f46322ffb81f072a24e64f728dba7",
          "name": "https://git.kernel.org/stable/c/73e36a699b9f46322ffb81f072a24e64f728dba7",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/cdd9a1ea23ff1a272547217100663e8de4eada40",
          "name": "https://git.kernel.org/stable/c/cdd9a1ea23ff1a272547217100663e8de4eada40",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/f3ce05283f6cb6e19c220f5382def43dc5bd56b9",
          "name": "https://git.kernel.org/stable/c/f3ce05283f6cb6e19c220f5382def43dc5bd56b9",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nHID: hid-thrustmaster: fix stack-out-of-bounds read in usb_check_int_endpoints()\n\nSyzbot[1] has detected a stack-out-of-bounds read of the ep_addr array from\nhid-thrustmaster driver. This array is passed to usb_check_int_endpoints\nfunction from usb.c core driver, which executes a for loop that iterates\nover the elements of the passed array. Not finding a null element at the end of\nthe array, it tries to read the next, non-existent element, crashing the kernel.\n\nTo fix this, a 0 element was added at the end of the array to break the for\nloop.\n\n[1] https://syzkaller.appspot.com/bug?extid=9c9179ac46169c56c1ad"
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-02-27T03:15Z",
  "lastModifiedDate": "2025-02-27T03:15Z"
}