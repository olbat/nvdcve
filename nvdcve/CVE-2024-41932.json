{
  "id": "CVE-2024-41932",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-11T13:15:20.930",
  "lastModified": "2025-01-11T13:15:20.930",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nsched: fix warning in sched_setaffinity\n\nCommit 8f9ea86fdf99b added some logic to sched_setaffinity that included\na WARN when a per-task affinity assignment races with a cpuset update.\n\nSpecifically, we can have a race where a cpuset update results in the\ntask affinity no longer being a subset of the cpuset. That's fine; we\nhave a fallback to instead use the cpuset mask. However, we have a WARN\nset up that will trigger if the cpuset mask has no overlap at all with\nthe requested task affinity. This shouldn't be a warning condition; its\ntrivial to create this condition.\n\nReproduced the warning by the following setup:\n\n- $PID inside a cpuset cgroup\n- another thread repeatedly switching the cpuset cpus from 1-2 to just 1\n- another thread repeatedly setting the $PID affinity (via taskset) to 2"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: sched: corrección de advertencia en sched_setaffinity El commit 8f9ea86fdf99b agregó algo de lógica a sched_setaffinity que incluía una ADVERTENCIA cuando una asignación de afinidad por tarea compite con una actualización de cpuset. Específicamente, podemos tener una ejecución donde una actualización de cpuset da como resultado que la afinidad de la tarea ya no sea un subconjunto del cpuset. Eso está bien; tenemos una alternativa para usar la máscara de cpuset. Sin embargo, tenemos una ADVERTENCIA configurada que se activará si la máscara de cpuset no se superpone en absoluto con la afinidad de la tarea solicitada. Esto no debería ser una condición de advertencia; es trivial crear esta condición. Se reprodujo la advertencia con la siguiente configuración: - $PID dentro de un cgroup de cpuset - otro hilo que cambia repetidamente las CPU de cpuset de 1-2 a solo 1 - otro hilo que establece repetidamente la afinidad $PID (a través del conjunto de tareas) en 2"
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/5c3fb75f538cfcb886f6dfeb497d99fc2f263ee6",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/70ee7947a29029736a1a06c73a48ff37674a851b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}