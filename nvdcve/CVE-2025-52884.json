{
  "id": "CVE-2025-52884",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-06-24T21:15:26.207",
  "lastModified": "2025-06-26T18:58:14.280",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "RISC Zero is a zero-knowledge verifiable general computing platform, with Ethereum integration. The risc0-ethereum repository contains Solidity verifier contracts, Steel EVM view call library, and supporting code. Prior to versions 2.1.1 and 2.2.0, the `Steel.validateCommitment` Solidity library function will return `true` for a crafted commitment with a digest value of zero. This violates the semantics of `validateCommitment`, as this does not commitment to a block that is in the current chain. Because the digest is zero, it does not correspond to any block and there exist no known openings. As a result, this commitment will never be produced by a correct zkVM guest using Steel and leveraging this bug to compromise the soundness of a program using Steel would require a separate bug or misuse of the Steel library, which is expected to be used to validate the root of state opening proofs. A fix has been released as part of `risc0-ethereum` 2.1.1 and 2.2.0. Users for the `Steel` Solidity library versions 2.1.0 or earlier should ensure they are using `Steel.validateCommitment` in tandem with zkVM proof verification of a Steel program, as shown in the ERC-20 counter example, and documentation. This is the correct usage of Steel, and users following this pattern are not at risk, and do not need to take action. Users not verifying a zkVM proof of a Steel program should update their application to do so, as this is incorrect usage of Steel."
    },
    {
      "lang": "es",
      "value": "RISC Zero es una plataforma informática general verificable de conocimiento cero, con integración con Ethereum. El repositorio risc0-ethereum contiene los contratos del verificador de Solidity, la librería de llamadas de vista Steel EVM y código de soporte. En versiones anteriores a la 2.1.1 y la 2.2.0, la función de la librería de Solidity `Steel.validateCommitment` devolvía `true` para un compromiso manipulado con un valor de resumen de cero. Esto viola la semántica de `validateCommitment`, ya que no se compromete con un bloque que esté en la cadena actual. Dado que el resumen es cero, no corresponde a ningún bloque y no existen aperturas conocidas. Como resultado, este compromiso nunca será producido por un invitado zkVM correcto que utilice Steel, y aprovechar este error para comprometer la solidez de un programa que utilice Steel requeriría un error separado o un mal uso de la librería Steel, que se espera que se utilice para validar la raíz de las pruebas de apertura de estado. Se ha publicado una corrección como parte de `risc0-ethereum` 2.1.1 y 2.2.0. Los usuarios de la librería `Steel` de Solidity, versiones 2.1.0 o anteriores, deben asegurarse de usar `Steel.validateCommitment` junto con la verificación de pruebas de zkVM de un programa Steel, como se muestra en el contraejemplo ERC-20 y la documentación. Este es el uso correcto de Steel, y los usuarios que siguen este patrón no corren ningún riesgo y no necesitan tomar medidas. Los usuarios que no verifiquen una prueba de zkVM de un programa Steel deben actualizar su aplicación para hacerlo, ya que este es un uso incorrecto de Steel."
    }
  ],
  "metrics": {
    "cvssMetricV40": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "4.0",
          "vectorString": "CVSS:4.0/AV:N/AC:H/AT:P/PR:N/UI:N/VC:N/VI:L/VA:N/SC:N/SI:N/SA:N/E:U/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",
          "baseScore": 1.7,
          "baseSeverity": "LOW",
          "attackVector": "NETWORK",
          "attackComplexity": "HIGH",
          "attackRequirements": "PRESENT",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "vulnConfidentialityImpact": "NONE",
          "vulnIntegrityImpact": "LOW",
          "vulnAvailabilityImpact": "NONE",
          "subConfidentialityImpact": "NONE",
          "subIntegrityImpact": "NONE",
          "subAvailabilityImpact": "NONE",
          "exploitMaturity": "UNREPORTED",
          "confidentialityRequirement": "NOT_DEFINED",
          "integrityRequirement": "NOT_DEFINED",
          "availabilityRequirement": "NOT_DEFINED",
          "modifiedAttackVector": "NOT_DEFINED",
          "modifiedAttackComplexity": "NOT_DEFINED",
          "modifiedAttackRequirements": "NOT_DEFINED",
          "modifiedPrivilegesRequired": "NOT_DEFINED",
          "modifiedUserInteraction": "NOT_DEFINED",
          "modifiedVulnConfidentialityImpact": "NOT_DEFINED",
          "modifiedVulnIntegrityImpact": "NOT_DEFINED",
          "modifiedVulnAvailabilityImpact": "NOT_DEFINED",
          "modifiedSubConfidentialityImpact": "NOT_DEFINED",
          "modifiedSubIntegrityImpact": "NOT_DEFINED",
          "modifiedSubAvailabilityImpact": "NOT_DEFINED",
          "Safety": "NOT_DEFINED",
          "Automatable": "NOT_DEFINED",
          "Recovery": "NOT_DEFINED",
          "valueDensity": "NOT_DEFINED",
          "vulnerabilityResponseEffort": "NOT_DEFINED",
          "providerUrgency": "NOT_DEFINED"
        }
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-159"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://docs.beboundless.xyz/developers/steel/how-it-works#verifying-the-proof-onchain",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/blob/ff0cb9253a87945b653b825711b8b5075f8b7545/examples/erc20-counter/contracts/src/Counter.sol#L56-L63",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/commit/3bbac859c7132b21ba5fdf2d47f1dd52e7e73d98",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/pull/605",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/releases/tag/v2.1.1",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/releases/tag/v2.2.0",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/risc0/risc0-ethereum/security/advisories/GHSA-gjv3-89hh-9xq2",
      "source": "security-advisories@github.com"
    }
  ]
}