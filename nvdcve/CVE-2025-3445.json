{
  "id": "CVE-2025-3445",
  "sourceIdentifier": "reefs@jfrog.com",
  "published": "2025-04-13T22:15:12.870",
  "lastModified": "2025-04-15T18:39:27.967",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "A Path Traversal \"Zip Slip\" vulnerability has been identified in mholt/archiver in Go. This vulnerability allows using a crafted ZIP file containing path traversal symlinks to create or overwrite files with the user's privileges or application utilizing the library.\n\nWhen using the archiver.Unarchive functionality with ZIP files, like this: archiver.Unarchive(zipFile, outputDir),  A crafted ZIP file can be extracted in such a way that it writes files to the affected system with the same privileges as the application executing this vulnerable functionality. Consequently, sensitive files may be overwritten, potentially leading to privilege escalation, code execution, and other severe outcomes in some cases.\n\nIt's worth noting that a similar vulnerability was found in TAR files (CVE-2024-0406). Although a fix was implemented, it hasn't been officially released, and the affected project has since been deprecated. The successor to mholt/archiver is a new project called mholt/archives, and its initial release (v0.1.0) removes the Unarchive() functionality."
    },
    {
      "lang": "es",
      "value": "Se ha identificado una vulnerabilidad de Path Traversal \"Zip Slip\" en mholt/archiver de Go. Esta vulnerabilidad permite usar un archivo ZIP manipulado que contiene enlaces simbólicos de ruta para manipular o sobrescribir archivos con los privilegios del usuario o la aplicación que utiliza la librería. Al usar la función `archiver.Unarchive` con archivos ZIP, como `archiver.Unarchive(zipFile, outputDir`), se puede extraer un archivo ZIP manipulado de forma que escriba archivos en el sistema afectado con los mismos privilegios que la aplicación que ejecuta esta función vulnerable. En consecuencia, se pueden sobrescribir archivos confidenciales, lo que podría provocar escalada de privilegios, ejecución de código y otras consecuencias graves en algunos casos. Cabe destacar que se encontró una vulnerabilidad similar en archivos TAR (CVE-2024-0406). Aunque se implementó una solución, no se ha publicado oficialmente y el proyecto afectado ha quedado obsoleto. El sucesor de mholt/archiver es un nuevo proyecto llamado mholt/archives, y su versión inicial (v0.1.0) elimina la funcionalidad Unarchive()."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "reefs@jfrog.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:H/A:L",
          "baseScore": 8.1,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "HIGH",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "HIGH",
          "availabilityImpact": "LOW"
        },
        "exploitabilityScore": 2.2,
        "impactScore": 5.3
      }
    ]
  },
  "weaknesses": [
    {
      "source": "reefs@jfrog.com",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-22"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/mholt/archiver/",
      "source": "reefs@jfrog.com"
    }
  ]
}