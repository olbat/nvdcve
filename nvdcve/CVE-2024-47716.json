{
  "id": "CVE-2024-47716",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-10-21T12:15:07.943",
  "lastModified": "2024-10-24T14:34:17.863",
  "vulnStatus": "Analyzed",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nARM: 9410/1: vfp: Use asm volatile in fmrx/fmxr macros\n\nFloating point instructions in userspace can crash some arm kernels\nbuilt with clang/LLD 17.0.6:\n\n    BUG: unsupported FP instruction in kernel mode\n    FPEXC == 0xc0000780\n    Internal error: Oops - undefined instruction: 0 [#1] ARM\n    CPU: 0 PID: 196 Comm: vfp-reproducer Not tainted 6.10.0 #1\n    Hardware name: BCM2835\n    PC is at vfp_support_entry+0xc8/0x2cc\n    LR is at do_undefinstr+0xa8/0x250\n    pc : [<c0101d50>]    lr : [<c010a80c>]    psr: a0000013\n    sp : dc8d1f68  ip : 60000013  fp : bedea19c\n    r10: ec532b17  r9 : 00000010  r8 : 0044766c\n    r7 : c0000780  r6 : ec532b17  r5 : c1c13800  r4 : dc8d1fb0\n    r3 : c10072c4  r2 : c0101c88  r1 : ec532b17  r0 : 0044766c\n    Flags: NzCv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\n    Control: 00c5387d  Table: 0251c008  DAC: 00000051\n    Register r0 information: non-paged memory\n    Register r1 information: vmalloc memory\n    Register r2 information: non-slab/vmalloc memory\n    Register r3 information: non-slab/vmalloc memory\n    Register r4 information: 2-page vmalloc region\n    Register r5 information: slab kmalloc-cg-2k\n    Register r6 information: vmalloc memory\n    Register r7 information: non-slab/vmalloc memory\n    Register r8 information: non-paged memory\n    Register r9 information: zero-size pointer\n    Register r10 information: vmalloc memory\n    Register r11 information: non-paged memory\n    Register r12 information: non-paged memory\n    Process vfp-reproducer (pid: 196, stack limit = 0x61aaaf8b)\n    Stack: (0xdc8d1f68 to 0xdc8d2000)\n    1f60:                   0000081f b6f69300 0000000f c10073f4 c10072c4 dc8d1fb0\n    1f80: ec532b17 0c532b17 0044766c b6f9ccd8 00000000 c010a80c 00447670 60000010\n    1fa0: ffffffff c1c13800 00c5387d c0100f10 b6f68af8 00448fc0 00000000 bedea188\n    1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c\n    1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff 00000000 00000000\n    Call trace:\n    [<c0101d50>] (vfp_support_entry) from [<c010a80c>] (do_undefinstr+0xa8/0x250)\n    [<c010a80c>] (do_undefinstr) from [<c0100f10>] (__und_usr+0x70/0x80)\n    Exception stack(0xdc8d1fb0 to 0xdc8d1ff8)\n    1fa0:                                     b6f68af8 00448fc0 00000000 bedea188\n    1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c\n    1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff\n    Code: 0a000061 e3877202 e594003c e3a09010 (eef16a10)\n    ---[ end trace 0000000000000000 ]---\n    Kernel panic - not syncing: Fatal exception in interrupt\n    ---[ end Kernel panic - not syncing: Fatal exception in interrupt ]---\n\nThis is a minimal userspace reproducer on a Raspberry Pi Zero W:\n\n    #include <stdio.h>\n    #include <math.h>\n\n    int main(void)\n    {\n            double v = 1.0;\n            printf(\"%fn\", NAN + *(volatile double *)&v);\n            return 0;\n    }\n\nAnother way to consistently trigger the oops is:\n\n    calvin@raspberry-pi-zero-w ~$ python -c \"import json\"\n\nThe bug reproduces only when the kernel is built with DYNAMIC_DEBUG=n,\nbecause the pr_debug() calls act as barriers even when not activated.\n\nThis is the output from the same kernel source built with the same\ncompiler and DYNAMIC_DEBUG=y, where the userspace reproducer works as\nexpected:\n\n    VFP: bounce: trigger ec532b17 fpexc c0000780\n    VFP: emulate: INST=0xee377b06 SCR=0x00000000\n    VFP: bounce: trigger eef1fa10 fpexc c0000780\n    VFP: emulate: INST=0xeeb40b40 SCR=0x00000000\n    VFP: raising exceptions 30000000\n\n    calvin@raspberry-pi-zero-w ~$ ./vfp-reproducer\n    nan\n\nCrudely grepping for vmsr/vmrs instructions in the otherwise nearly\nidential text for vfp_support_entry() makes the problem obvious:\n\n    vmlinux.llvm.good [0xc0101cb8] <+48>:  vmrs   r7, fpexc\n    vmlinux.llvm.good [0xc0101cd8] <+80>:  vmsr   fpexc, r0\n    vmlinux.llvm.good [0xc0101d20\n---truncated---"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ARM: 9410/1: vfp: usar asm volátil en macros fmrx/fmxr Las instrucciones de punto flotante en el espacio de usuario pueden bloquear algunos kernels de ARM creados con clang/LLD 17.0.6: ERROR: instrucción FP no compatible en modo kernel FPEXC == 0xc0000780 Error interno: Ups - instrucción no definida: 0 [#1] CPU ARM: 0 PID: 196 Comm: vfp-reproducer No contaminado 6.10.0 #1 Nombre del hardware: BCM2835 La PC está en vfp_support_entry+0xc8/0x2cc LR está en do_undefinstr+0xa8/0x250 pc : [] lr : [] psr: a0000013 sp : dc8d1f68 ip : 60000013 fp : bedea19c r10: ec532b17 r9 : 00000010 r8 : 0044766c r7 : c0000780 r6 : ec532b17 r5 : c1c13800 r4 : dc8d1fb0 r3 : c10072c4 r2 : c0101c88 r1 : ec532b17 r0 : 0044766c Indicadores: NzCv IRQ en FIQ en modo SVC_32 ISA ARM Segmento ninguno Control: 00c5387d Tabla: 0251c008 DAC: 00000051 Información del registro r0: Información del registro r1: memoria vmalloc Información del registro r2: memoria no slab/vmalloc Información del registro r3: memoria no slab/vmalloc Información del registro r4: región vmalloc de 2 páginas Información del registro r5: slab kmalloc-cg-2k Información del registro r6: memoria vmalloc Información del registro r7: memoria no slab/vmalloc Información del registro r8: memoria no paginada Información del registro r9: puntero de tamaño cero Información del registro r10: memoria vmalloc Información del registro r11: memoria no paginada Información del registro r12: memoria no paginada Proceso vfp-reproducer (pid: 196, límite de pila = 0x61aaaf8b) Pila: (0xdc8d1f68 a 0xdc8d2000) 1f60: 0000081f b6f69300 0000000f c10073f4 c10072c4 dc8d1fb0 1f80: ec532b17 0c532b17 0044766c b6f9ccd8 00000000 c010a80c 00447670 60000010 1fa0: ffffffff c1c13800 7d c0100f10 b6f68af8 00448fc0 00000000 bedea188 1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c 1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff 00000000 00000000 Seguimiento de llamadas: [] (vfp_support_entry) desde [] (do_undefinstr+0xa8/0x250) [] (do_undefinstr) desde [] (__und_usr+0x70/0x80) Pila de excepciones (0xdc8d1fb0 a 0xdc8d1ff8) 1fa0: b6f68af8 00448fc0 00000000 bedea188 1fc0: bedea314 00000001 00448ebc b6f9d000 00447608 b6f9ccd8 00000000 bedea19c 1fe0: bede9198 bedea188 b6e1061c 0044766c 60000010 ffffffff Código: 0a000061 e3877202 e594003c e3a09010 (eef16a10) ---[ fin del seguimiento 000000000000000 ]--- Pánico del kernel: no sincroniza: Excepción fatal en la interrupción ---[ fin del kernel: no sincroniza: Excepción fatal en la interrupción ]--- Este es un reproductor de espacio de usuario mínimo en una Raspberry Pi Zero W: #include  #include  int main(void) { double v = 1.0; printf(\"%fn\", NAN + *(volatile double *)&amp;v); return 0; } Otra forma de activar consistentemente el error es: calvin@raspberry-pi-zero-w ~$ python -c \"import json\" El error se reproduce solo cuando el kernel se construye con DYNAMIC_DEBUG=n, porque las llamadas pr_debug() actúan como barreras incluso cuando no están activadas. Esta es la salida de la misma fuente del kernel creada con el mismo compilador y DYNAMIC_DEBUG=y, donde el reproductor de espacio de usuario funciona como se espera: VFP: bounce: trigger ec532b17 fpexc c0000780 VFP: emulate: INST=0xee377b06 SCR=0x00000000 VFP: bounce: trigger eef1fa10 fpexc c0000780 VFP: emulate: INST=0xeeb40b40 SCR=0x00000000 VFP: raising exceptions 30000000 calvin@raspberry-pi-zero-w ~$ ./vfp-reproducer nan Buscar burdamente instrucciones vmsr/vmrs en el texto casi idéntico de vfp_support_entry() hace que el problema sea obvio: vmlinux.llvm.good [0xc0101cb8] &lt;+48&gt;: vmrs r7, fpexc vmlinux.llvm.good [0xc0101cd8] &lt;+80&gt;: vmsr fpexc, r0 vmlinux.llvm.good [0xc0101d20 ---truncado---"
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "baseScore": 5.5,
          "baseSeverity": "MEDIUM",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 1.8,
        "impactScore": 3.6
      }
    ]
  },
  "weaknesses": [
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "NVD-CWE-noinfo"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.6",
              "versionEndExcluding": "6.6.54",
              "matchCriteriaId": "E729C51E-0317-4ABD-B95D-E6F8D80A17F6"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.7",
              "versionEndExcluding": "6.10.13",
              "matchCriteriaId": "CE94BB8D-B0AB-4563-9ED7-A12122B56EBE"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.11",
              "versionEndExcluding": "6.11.2",
              "matchCriteriaId": "AB755D26-97F4-43B6-8604-CD076811E181"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/39caf610a63786b3b0ef3348ac015edc19827d6a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/89a906dfa8c3b21b3e5360f73c49234ac1eb885b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/9fc60f2bdd43e758bdf0305c0fc83221419ddb3f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/cd595d87e5fdd2fc09ea69359aa85e7f12f4b97b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    }
  ]
}