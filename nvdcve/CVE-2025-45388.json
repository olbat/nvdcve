{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-45388",
      "ASSIGNER": "cve@mitre.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://docs.wagtail.org/en/stable/deployment/under_the_hood.html#documents",
          "name": "https://docs.wagtail.org/en/stable/deployment/under_the_hood.html#documents",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://github.com/echoBRT/Wagtail-CMS-XSS/",
          "name": "https://github.com/echoBRT/Wagtail-CMS-XSS/",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://github.com/echoBRT/Wagtail-CMS-XSS/",
          "name": "https://github.com/echoBRT/Wagtail-CMS-XSS/",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://github.com/wagtail/wagtail/discussions/12617",
          "name": "https://github.com/wagtail/wagtail/discussions/12617",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://github.com/wagtail/wagtail/pull/12672",
          "name": "https://github.com/wagtail/wagtail/pull/12672",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://github.com/wagtail/wagtail/wiki/Security-team",
          "name": "https://github.com/wagtail/wagtail/wiki/Security-team",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "Wagtail CMS 6.4.1 is vulnerable to a Stored Cross-Site Scripting (XSS) in the document upload functionality. Attackers can inject malicious code inside a PDF file. When a user clicks the document in the CMS interface, the payload executes. NOTE: this is disputed by the Supplier because \"It has been well documented that when serving uploaded files using a method outside of Wagtail (which admittedly is the default), it requires additional configuration from the developer, because Wagtail cannot control how these are served. ... For example, if a Wagtail instance is configured to upload files into AWS S3, Wagtail cannot control the permissions on how they're served, nor any headers used when serving them (a limitation of S3).\""
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-05-07T19:16Z",
  "lastModifiedDate": "2025-05-09T14:15Z"
}