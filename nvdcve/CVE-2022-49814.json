{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2022-49814",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/22f6b5d47396b4287662668ee3f5c1f766cb4259",
          "name": "https://git.kernel.org/stable/c/22f6b5d47396b4287662668ee3f5c1f766cb4259",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/4154b6afa2bd639214ff259d912faad984f7413a",
          "name": "https://git.kernel.org/stable/c/4154b6afa2bd639214ff259d912faad984f7413a",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/5121197ecc5db58c07da95eb1ff82b98b121a221",
          "name": "https://git.kernel.org/stable/c/5121197ecc5db58c07da95eb1ff82b98b121a221",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/bf92e54597d842da127c59833b365d6faeeaf020",
          "name": "https://git.kernel.org/stable/c/bf92e54597d842da127c59833b365d6faeeaf020",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/ce57d6474ae999a3b2d442314087473a646a65c7",
          "name": "https://git.kernel.org/stable/c/ce57d6474ae999a3b2d442314087473a646a65c7",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/d9ad4de92e184b19bcae4da10dac0275abf83931",
          "name": "https://git.kernel.org/stable/c/d9ad4de92e184b19bcae4da10dac0275abf83931",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3",
          "name": "https://git.kernel.org/stable/c/f7b0e95071bb4be4b811af3f0bfc3e200eedeaa3",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nkcm: close race conditions on sk_receive_queue\n\nsk->sk_receive_queue is protected by skb queue lock, but for KCM\nsockets its RX path takes mux->rx_lock to protect more than just\nskb queue. However, kcm_recvmsg() still only grabs the skb queue\nlock, so race conditions still exist.\n\nWe can teach kcm_recvmsg() to grab mux->rx_lock too but this would\nintroduce a potential performance regression as struct kcm_mux can\nbe shared by multiple KCM sockets.\n\nSo we have to enforce skb queue lock in requeue_rx_msgs() and handle\nskb peek case carefully in kcm_wait_data(). Fortunately,\nskb_recv_datagram() already handles it nicely and is widely used by\nother sockets, we can just switch to skb_recv_datagram() after\ngetting rid of the unnecessary sock lock in kcm_recvmsg() and\nkcm_splice_read(). Side note: SOCK_DONE is not used by KCM sockets,\nso it is safe to get rid of this check too.\n\nI ran the original syzbot reproducer for 30 min without seeing any\nissue."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-05-01T15:16Z",
  "lastModifiedDate": "2025-05-01T15:16Z"
}