{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2021-47652",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/0fd28daec73525382e5c992db8743bf76e42cd5c",
          "name": "https://git.kernel.org/stable/c/0fd28daec73525382e5c992db8743bf76e42cd5c",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/1791f487f877a9e83d81c8677bd3e7b259e7cb27",
          "name": "https://git.kernel.org/stable/c/1791f487f877a9e83d81c8677bd3e7b259e7cb27",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/64ec3e678d76419f207b9cdd338dda438ca10b1c",
          "name": "https://git.kernel.org/stable/c/64ec3e678d76419f207b9cdd338dda438ca10b1c",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/9280ef235b05e8f19f8bc6d547b992f0a0ef398d",
          "name": "https://git.kernel.org/stable/c/9280ef235b05e8f19f8bc6d547b992f0a0ef398d",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/c420b540db4b5d69de0a36d8b9d9a6a79a04f05a",
          "name": "https://git.kernel.org/stable/c/c420b540db4b5d69de0a36d8b9d9a6a79a04f05a",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/d1b6a1f0c23b7164250479bf92e2893291dca539",
          "name": "https://git.kernel.org/stable/c/d1b6a1f0c23b7164250479bf92e2893291dca539",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/d396c651e2b508b6179bb678cc029f3becbf5170",
          "name": "https://git.kernel.org/stable/c/d396c651e2b508b6179bb678cc029f3becbf5170",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/da8b269cc0a2526ebeaccbe2484c999eb0f822cf",
          "name": "https://git.kernel.org/stable/c/da8b269cc0a2526ebeaccbe2484c999eb0f822cf",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/dd3a6cc7385b89ec2303f39dfc3bafa4e24cec4b",
          "name": "https://git.kernel.org/stable/c/dd3a6cc7385b89ec2303f39dfc3bafa4e24cec4b",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nvideo: fbdev: smscufx: Fix null-ptr-deref in ufx_usb_probe()\n\nI got a null-ptr-deref report:\n\nBUG: kernel NULL pointer dereference, address: 0000000000000000\n...\nRIP: 0010:fb_destroy_modelist+0x38/0x100\n...\nCall Trace:\n ufx_usb_probe.cold+0x2b5/0xac1 [smscufx]\n usb_probe_interface+0x1aa/0x3c0 [usbcore]\n really_probe+0x167/0x460\n...\n ret_from_fork+0x1f/0x30\n\nIf fb_alloc_cmap() fails in ufx_usb_probe(), fb_destroy_modelist() will\nbe called to destroy modelist in the error handling path. But modelist\nhas not been initialized yet, so it will result in null-ptr-deref.\n\nInitialize modelist before calling fb_alloc_cmap() to fix this bug."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-02-26T06:37Z",
  "lastModifiedDate": "2025-02-26T06:37Z"
}