{
  "id": "CVE-2025-21768",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-02-27T03:15:17.480",
  "lastModified": "2025-02-27T03:15:17.480",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: ipv6: fix dst ref loops in rpl, seg6 and ioam6 lwtunnels\n\nSome lwtunnels have a dst cache for post-transformation dst.\nIf the packet destination did not change we may end up recording\na reference to the lwtunnel in its own cache, and the lwtunnel\nstate will never be freed.\n\nDiscovered by the ioam6.sh test, kmemleak was recently fixed\nto catch per-cpu memory leaks. I'm not sure if rpl and seg6\ncan actually hit this, but in principle I don't see why not."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: net: ipv6: arreglo de bucles de referencia dst en lwtunnels rpl, seg6 y ioam6 Algunos lwtunnels tienen una caché dst para dst posterior a la transformación. Si el destino del paquete no cambió, podemos terminar registrando una referencia al lwtunnel en su propia caché, y el estado del lwtunnel nunca se liberará. Descubierto por la prueba ioam6.sh, kmemleak se corrigió recientemente para detectar fugas de memoria por CPU. No estoy seguro de si rpl y seg6 realmente pueden alcanzar esto, pero en principio no veo por qué no."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/4c0f200c7d06fedddde82209c099014d63f4a6c0",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/5ab11a4e219e93b8b31a27f8ec98d42afadd8b7a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/92191dd1073088753821b862b791dcc83e558e07",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}