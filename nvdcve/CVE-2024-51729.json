{
  "id": "CVE-2024-51729",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-11T13:15:24.650",
  "lastModified": "2025-01-11T13:15:24.650",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: use aligned address in copy_user_gigantic_page()\n\nIn current kernel, hugetlb_wp() calls copy_user_large_folio() with the\nfault address.  Where the fault address may be not aligned with the huge\npage size.  Then, copy_user_large_folio() may call\ncopy_user_gigantic_page() with the address, while\ncopy_user_gigantic_page() requires the address to be huge page size\naligned.  So, this may cause memory corruption or information leak,\naddtional, use more obvious naming 'addr_hint' instead of 'addr' for\ncopy_user_gigantic_page()."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm: usar dirección alineada en copy_user_gigantic_page() En el kernel actual, hugetlb_wp() llama a copy_user_large_folio() con la dirección de error. Donde la dirección de error puede no estar alineada con el tamaño de página enorme. Entonces, copy_user_large_folio() puede llamar a copy_user_gigantic_page() con la dirección, mientras que copy_user_gigantic_page() requiere que la dirección esté alineada con el tamaño de página enorme. Por lo tanto, esto puede causar corrupción de memoria o fuga de información. Además, use un nombre más obvio 'addr_hint' en lugar de 'addr' para copy_user_gigantic_page()."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/cb12d61361ce769672c7c7bd32107252598cdd8b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/f5d09de9f1bf9674c6418ff10d0a40cfe29268e1",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}