{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2013-4170",
      "ASSIGNER": "secalert@redhat.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [

          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102",
          "name": "https://security.snyk.io/vuln/SNYK-RUBY-EMBERSOURCE-20102",
          "refsource": "MISC",
          "tags": [

          ]
        },
        {
          "url": "https://groups.google.com/g/ember-security/c/dokLVwwxAdM",
          "name": "https://groups.google.com/g/ember-security/c/dokLVwwxAdM",
          "refsource": "MISC",
          "tags": [

          ]
        },
        {
          "url": "https://rubysec.com/advisories/CVE-2013-4170/",
          "name": "https://rubysec.com/advisories/CVE-2013-4170/",
          "refsource": "MISC",
          "tags": [

          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In general, Ember.js escapes or strips any user-supplied content before inserting it in strings that will be sent to innerHTML. However, the `tagName` property of an `Ember.View` was inserted into such a string without being sanitized. This means that if an application assigns a view's `tagName` to user-supplied data, a specially-crafted payload could execute arbitrary JavaScript in the context of the current domain (\"XSS\"). This vulnerability only affects applications that assign or bind user-provided content to `tagName`."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [

    ]
  },
  "impact": {
  },
  "publishedDate": "2022-06-30T13:15Z",
  "lastModifiedDate": "2022-06-30T17:00Z"
}