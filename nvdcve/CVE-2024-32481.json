{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2024-32481",
      "ASSIGNER": "security-advisories@github.com"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-681"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287",
          "name": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287",
          "refsource": "",
          "tags": [
            "Product"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287",
          "name": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287",
          "refsource": "",
          "tags": [
            "Product"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868",
          "name": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868",
          "refsource": "",
          "tags": [
            "Patch"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868",
          "name": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868",
          "refsource": "",
          "tags": [
            "Patch"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5",
          "name": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5",
          "refsource": "",
          "tags": [
            "Patch"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5",
          "name": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5",
          "refsource": "",
          "tags": [
            "Patch"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj",
          "name": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj",
          "refsource": "",
          "tags": [
            "Exploit",
            "Vendor Advisory"
          ]
        },
        {
          "url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj",
          "name": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj",
          "refsource": "",
          "tags": [
            "Exploit",
            "Vendor Advisory"
          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. Starting in version 0.3.8 and prior to version 0.4.0b1, when looping over a `range` of the form `range(start, start + N)`, if `start` is negative, the execution will always revert. This issue is caused by an incorrect assertion inserted by the code generation of the range `stmt.parse_For_range()`. The issue arises when `start` is signed, instead of using `sle`, `le` is used and `start` is interpreted as an unsigned integer for the comparison. If it is a negative number, its 255th bit is set to `1` and is hence interpreted as a very large unsigned integer making the assertion always fail. Any contract having a `range(start, start + N)` where `start` is a signed integer with the possibility for `start` to be negative is affected. If a call goes through the loop while supplying a negative `start` the execution will revert. Version 0.4.0b1 fixes the issue."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [
      {
        "operator": "OR",
        "children": [],
        "cpe_match": [
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:vyperlang:vyper:*:*:*:*:*:python:*:*",
            "versionStartIncluding": "0.3.8",
            "versionEndIncluding": "0.3.10",
            "cpe_name": []
          },
          {
            "vulnerable": true,
            "cpe23Uri": "cpe:2.3:a:vyperlang:vyper:0.4.0:-:*:*:*:python:*:*",
            "cpe_name": []
          }
        ]
      }
    ]
  },
  "impact": {
    "baseMetricV3": {
      "cvssV3": {
        "version": "3.1",
        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
        "attackVector": "NETWORK",
        "attackComplexity": "LOW",
        "privilegesRequired": "NONE",
        "userInteraction": "NONE",
        "scope": "UNCHANGED",
        "confidentialityImpact": "NONE",
        "integrityImpact": "LOW",
        "availabilityImpact": "NONE",
        "baseScore": 5.3,
        "baseSeverity": "MEDIUM"
      },
      "exploitabilityScore": 3.9,
      "impactScore": 1.4
    }
  },
  "publishedDate": "2024-04-25T17:15Z",
  "lastModifiedDate": "2025-05-05T17:31Z"
}