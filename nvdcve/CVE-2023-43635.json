{
  "id": "CVE-2023-43635",
  "sourceIdentifier": "cve@asrg.io",
  "published": "2023-09-20T15:15:11.987",
  "lastModified": "2024-11-21T08:24:30.877",
  "vulnStatus": "Modified",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "\nVault Key Sealed With SHA1 PCRs\n\n\n\n\n\n\nThe measured boot solution implemented in EVE OS leans on a PCR locking mechanism.\n\nDifferent parts of the system update different PCR values in the TPM, resulting in a unique\nvalue for each PCR entry.\n\nThese PCRs are then used in order to seal/unseal a key from the TPM which is used to\nencrypt/decrypt the “vault” directory.\n\nThis “vault” directory is the most sensitive point in the system and as such, its content should\nbe protected.\n\nThis mechanism is noted in Zededa’s documentation as the “measured boot” mechanism,\ndesigned to protect said “vault”.\n\nThe code that’s responsible for generating and fetching the key from the TPM assumes that\nSHA256 PCRs are used in order to seal/unseal the key, and as such their presence is being\nchecked.\n\nThe issue here is that the key is not sealed using SHA256 PCRs, but using SHA1 PCRs.\nThis leads to several issues:\n\n• Machines that have their SHA256 PCRs enabled but SHA1 PCRs disabled, as well\nas not sealing their keys at all, meaning the “vault” is not protected from an attacker.\n\n• SHA1 is considered insecure and reduces the complexity level required to unseal the\nkey in machines which have their SHA1 PCRs enabled.\n\n\n\nAn attacker can very easily retrieve the contents of the “vault”, which will effectively render\nthe “measured boot” mechanism meaningless.\n\n\n\n\n\n"
    },
    {
      "lang": "es",
      "value": "Vault Key Sealed With SHA1 PCRs La solución de arranque medido implementada en EVE OS se apoya en un mecanismo de bloqueo de PCR. Diferentes partes del sistema actualizan diferentes valores de PCR en el TPM, lo que da como resultado un valor único para cada entrada de PCR. Estos PCR se utilizan luego para sellar/abrir una clave del TPM que se utiliza para cifrar/descifrar el directorio \"vault\". Este directorio \"vault\" es el punto más sensible del sistema y, como tal, su contenido debe estar protegido. Este mecanismo está señalado en la documentación de Zededa como el mecanismo de “measured boot”, diseñado para proteger dicha “vault”. El código responsable de generar y obtener la clave del TPM asume que se utilizan PCR SHA256 para sellar/abrir la clave y, como tal, se verifica su presencia. El problema aquí es que la clave no se sella mediante PCR SHA256, sino mediante PCR SHA1. Esto genera varios problemas: • Máquinas que tienen sus PCR SHA256 habilitadas pero las PCR SHA1 deshabilitadas, además de que no sellan sus claves en absoluto, lo que significa que la “vault” no está protegida de un atacante. • SHA1 se considera inseguro y reduce el nivel de complejidad requerido para desbloquear la clave en máquinas que tienen sus PCR SHA1 habilitados. Un atacante puede recuperar muy fácilmente el contenido de la \"vault\", lo que efectivamente dejará sin sentido el mecanismo de \"measured boot\"."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "cve@asrg.io",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "baseScore": 8.8,
          "baseSeverity": "HIGH",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.0,
        "impactScore": 6.0
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
          "baseScore": 8.8,
          "baseSeverity": "HIGH",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.0,
        "impactScore": 6.0
      }
    ]
  },
  "weaknesses": [
    {
      "source": "cve@asrg.io",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-328"
        },
        {
          "lang": "en",
          "value": "CWE-522"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-327"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linuxfoundation:edge_virtualization_engine:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "9.5.0",
              "matchCriteriaId": "B3C18178-A893-4EA6-8BBF-51F05CE4CB7E"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://asrg.io/security-advisories/cve-2023-43635/",
      "source": "cve@asrg.io"
    },
    {
      "url": "https://asrg.io/security-advisories/cve-2023-43635/",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}