{
  "id": "CVE-2024-50216",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-11-09T11:15:06.987",
  "lastModified": "2024-11-12T13:56:24.513",
  "vulnStatus": "Undergoing Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix finding a last resort AG in xfs_filestream_pick_ag\n\nWhen the main loop in xfs_filestream_pick_ag fails to find a suitable\nAG it tries to just pick the online AG.  But the loop for that uses\nargs->pag as loop iterator while the later code expects pag to be\nset.  Fix this by reusing the max_pag case for this last resort, and\nalso add a check for impossible case of no AG just to make sure that\nthe uninitialized pag doesn't even escape in theory."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: xfs: se corrige la búsqueda de un AG de último recurso en xfs_filestream_pick_ag Cuando el bucle principal en xfs_filestream_pick_ag no puede encontrar un AG adecuado, intenta simplemente elegir el AG en línea. Pero el bucle para eso usa args-&gt;pag como iterador de bucle mientras que el código posterior espera que se configure pag. Corrija esto reutilizando el caso max_pag para este último recurso y también agregue una verificación para el caso imposible de que no haya AG solo para asegurarse de que el pag no inicializado ni siquiera escape en teoría."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/77ddc732416b017180893cbb2356e9f0a414c575",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/a023408925acd64db5c8980373fcb3e28ec6fd29",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/dc60992ce76fbc2f71c2674f435ff6bde2108028",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}