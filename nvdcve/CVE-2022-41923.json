{
  "id": "CVE-2022-41923",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2022-11-23T19:15:12.300",
  "lastModified": "2024-11-21T07:24:04.653",
  "vulnStatus": "Modified",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "Grails Spring Security Core plugin is vulnerable to privilege escalation. The vulnerability allows an attacker access to one endpoint (i.e. the targeted endpoint) using the authorization requirements of a different endpoint (i.e. the donor endpoint). In some Grails framework applications, access to the targeted endpoint will be granted based on meeting the authorization requirements of the donor endpoint, which can result in a privilege escalation attack. This vulnerability has been patched in grails-spring-security-core versions 3.3.2, 4.0.5 and 5.1.1. Impacted Applications: Grails Spring Security Core plugin versions: 1.x 2.x >=3.0.0 <3.3.2 >=4.0.0 <4.0.5 >=5.0.0 <5.1.1 We strongly suggest that all Grails framework applications using the Grails Spring Security Core plugin be updated to a patched release of the plugin. Workarounds: Users should create a subclass extending one of the following classes from the `grails.plugin.springsecurity.web.access.intercept` package, depending on their security configuration: * `AnnotationFilterInvocationDefinition` * `InterceptUrlMapFilterInvocationDefinition` * `RequestmapFilterInvocationDefinition` In each case, the subclass should override the `calculateUri` method like so: ``` @Override protected String calculateUri(HttpServletRequest request) { UrlPathHelper.defaultInstance.getRequestUri(request) } ``` This should be considered a temporary measure, as the patched versions of grails-spring-security-core deprecates the `calculateUri` method. Once upgraded to a patched version of the plugin, this workaround is no longer needed. The workaround is especially important for version 2.x, as no patch is available version 2.x of the GSSC plugin."
    },
    {
      "lang": "es",
      "value": "El complemento Grails Spring Security Core es vulnerable a la escalada de privilegios. La vulnerabilidad permite que un atacante acceda a un endpoint (es decir, el endpoint objetivo) utilizando los requisitos de autorización de un endpoint diferente (es decir, el endpoint donante). En algunas aplicaciones del framework Grails, el acceso al endpoint de destino se otorgará en función del cumplimiento de los requisitos de autorización del endpoint donante, lo que puede resultar en un ataque de escalada de privilegios. Esta vulnerabilidad se ha solucionado en las versiones 3.3.2, 4.0.5 y 5.1.1 de Grails-spring-security-core. Aplicaciones afectadas: Versiones del complemento Grails Spring Security Core: 1.x 2.x &gt;=3.0.0 &lt;3.3.2 &gt;=4.0.0 &lt;4.0.5 &gt;=5.0.0 &lt;5.1.1 Nosotros Sugerimos encarecidamente que todas las aplicaciones del marco de Grails que utilicen el complemento Grails Spring Security Core se actualicen a una versión parcheada del complemento. Workarounds: los usuarios deben crear una subclase que extienda una de las siguientes clases del paquete `grails.plugin.springsecurity.web.access.intercept`, dependiendo de su configuración de seguridad: \n* `AnnotationFilterInvocationDefinition` \n* `InterceptUrlMapFilterInvocationDefinition` \n* `RequestmapFilterInvocationDefinition` \nEn este caso, la subclase debe anular el método `calculateUri` de la siguiente manera: \n``` @Override protected String calcularUri(HttpServletRequest request) { UrlPathHelper.defaultInstance.getRequestUri(request) } ``` \nEsto debe considerarse una medida temporal, ya que el parche las versiones de grails-spring-security-core desaprueban el método `calculateUri`. Una vez actualizado a una versión parcheada del complemento, este workaround ya no es necesario. El workaround es especialmente importante para la versión 2.x, ya que no hay ningún parche disponible para la versión 2.x del complemento GSSC."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
          "baseScore": 9.1,
          "baseSeverity": "CRITICAL",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 5.2
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 9.8,
          "baseSeverity": "CRITICAL",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-269"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-863"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:grails:spring_security_core:*:*:*:*:*:grails:*:*",
              "versionStartIncluding": "1.0",
              "versionEndExcluding": "3.3.2",
              "matchCriteriaId": "1F452774-0B25-4FBD-ACC8-ED715A76203F"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:grails:spring_security_core:*:*:*:*:*:grails:*:*",
              "versionStartIncluding": "4.0.0",
              "versionEndExcluding": "4.0.5",
              "matchCriteriaId": "BA02192B-4871-43BA-8CDE-D5EA222244B2"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:grails:spring_security_core:*:*:*:*:*:grails:*:*",
              "versionStartIncluding": "5.0.0",
              "versionEndExcluding": "5.1.1",
              "matchCriteriaId": "66C77F51-5602-41E8-B852-FE373AA3CA4C"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/grails/GSSC-CVE-2022-41923",
      "source": "security-advisories@github.com",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grails/grails-spring-security-core/security/advisories/GHSA-frqg-vvxg-jqqh",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://grails.org/blog/2022-11-22-ss-plugin-auth-cve.html",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/grails/GSSC-CVE-2022-41923",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/grails/grails-spring-security-core/security/advisories/GHSA-frqg-vvxg-jqqh",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://grails.org/blog/2022-11-22-ss-plugin-auth-cve.html",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Vendor Advisory"
      ]
    }
  ]
}