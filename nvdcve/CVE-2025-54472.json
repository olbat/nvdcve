{
  "id": "CVE-2025-54472",
  "sourceIdentifier": "security@apache.org",
  "published": "2025-08-14T09:15:26.683",
  "lastModified": "2025-08-18T18:35:46.417",
  "vulnStatus": "Analyzed",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "Unlimited memory allocation in redis protocol parser in Apache bRPC (all versions < 1.14.1) on all platforms allows attackers to crash the service via network.\n\n\n\nRoot Cause: In the bRPC Redis protocol parser code, memory for arrays or strings of corresponding sizes is allocated based on the integers read from the network. If the integer read from the network is too large, it may cause a bad alloc error and lead to the program crashing. Attackers can exploit this feature by sending special data packets to the bRPC service to carry out a denial-of-service attack on it.\nThe bRPC 1.14.0 version tried to fix this issue by limited the memory allocation size, however, the limitation checking code is not well implemented that may cause integer overflow and evade such limitation. So the 1.14.0 version is also vulnerable, although the integer range that affect version 1.14.0 is different from that affect version < 1.14.0.\n\n\n\nAffected scenarios: Using bRPC as a Redis server to provide network services to untrusted clients, or using bRPC as a Redis client to call untrusted Redis services.\n\n\n\nHow to Fix: we provide two methods, you can choose one of them:\n\n1. Upgrade bRPC to version 1.14.1.\n2. Apply this patch ( https://github.com/apache/brpc/pull/3050 ) manually.\n\nNo matter you choose which method, you should note that the patch limits the maximum length of memory allocated for each time in the bRPC Redis parser. The default limit is 64M. If some of you redis request or response have a size larger than 64M, you might encounter error after upgrade. For such case, you can modify the gflag redis_max_allocation_size to set a larger limit."
    },
    {
      "lang": "es",
      "value": "La asignación ilimitada de memoria en el analizador de protocolo Redis de Apache bRPC (todas las versiones anteriores a la 1.14.1) en todas las plataformas permite a los atacantes bloquear el servicio a través de la red. Causa raíz: En el código del analizador de protocolo Redis de bRPC, la memoria para matrices o cadenas de tamaños correspondientes se asigna en función de los enteros leídos de la red. Si el entero leído de la red es demasiado grande, puede causar un error de asignación incorrecta y provocar el bloqueo del programa. Los atacantes pueden explotar esta característica enviando paquetes de datos especiales al servicio bRPC para llevar a cabo un ataque de denegación de servicio. La versión bRPC 1.14.0 intentó solucionar este problema limitando el tamaño de la asignación de memoria; sin embargo, el código de comprobación de limitaciones no está bien implementado, lo que puede causar un desbordamiento de enteros y evadir dicha limitación. Por lo tanto, la versión 1.14.0 también es vulnerable, aunque el rango de enteros que afecta a la versión 1.14.0 es diferente al que afecta a la versión anterior. Escenarios afectados: Usar bRPC como servidor Redis para proporcionar servicios de red a clientes no confiables, o usar bRPC como cliente Redis para llamar a servicios Redis no confiables. Cómo solucionarlo: ofrecemos dos métodos, puede elegir uno de ellos: 1. Actualice bRPC a la versión 1.14.1. 2. Aplique este parche (https://github.com/apache/brpc/pull/3050) manualmente. Independientemente del método que elija, debe tener en cuenta que el parche limita la longitud máxima de memoria asignada para cada vez en el analizador Redis de bRPC. El límite predeterminado es 64M. Si alguna de sus solicitudes o respuestas de Redis tiene un tamaño mayor a 64M, podría encontrar un error después de la actualización. Para tal caso, puede modificar el gflag redis_max_allocation_size para establecer un límite mayor."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "baseScore": 7.5,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 3.6
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security@apache.org",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-190"
        },
        {
          "lang": "en",
          "value": "CWE-400"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:apache:brpc:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "1.14.1",
              "matchCriteriaId": "6ACE2C20-D9A0-4BD4-A011-F61D65B8FBC0"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://lists.apache.org/thread/r3xsy3wvs4kmfhc281173k5b6ll1xt2m",
      "source": "security@apache.org",
      "tags": [
        "Mailing List",
        "Vendor Advisory",
        "Patch"
      ]
    }
  ]
}