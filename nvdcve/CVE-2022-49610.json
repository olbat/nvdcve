{
  "id": "CVE-2022-49610",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-02-26T07:01:36.463",
  "lastModified": "2025-02-26T07:01:36.463",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: VMX: Prevent RSB underflow before vmenter\n\nOn VMX, there are some balanced returns between the time the guest's\nSPEC_CTRL value is written, and the vmenter.\n\nBalanced returns (matched by a preceding call) are usually ok, but it's\nat least theoretically possible an NMI with a deep call stack could\nempty the RSB before one of the returns.\n\nFor maximum paranoia, don't allow *any* returns (balanced or otherwise)\nbetween the SPEC_CTRL write and the vmenter.\n\n  [ bp: Fix 32-bit build. ]"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: KVM: VMX: Evitar el desbordamiento de RSB antes de vmenter En VMX, hay algunos retornos equilibrados entre el momento en que se escribe el valor SPEC_CTRL del invitado y el vmenter. Los retornos equilibrados (que coinciden con una llamada anterior) suelen ser correctos, pero al menos es teóricamente posible que un NMI con una pila de llamadas profunda pueda vaciar el RSB antes de uno de los retornos. Para máxima paranoia, no permita *ningún* retorno (equilibrado o de otro tipo) entre la escritura de SPEC_CTRL y el vmenter. [ bp: Arreglar compilación de 32 bits. ]"
    }
  ],
  "metrics": {
  },
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/07853adc29a058c5fd143c14e5ac528448a72ed9",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/afd743f6dde87296c6f3414706964c491bb85862",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}