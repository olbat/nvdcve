{
  "id": "CVE-2025-26620",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-02-18T18:15:36.767",
  "lastModified": "2025-02-18T18:15:36.767",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "Duende.AccessTokenManagement is a set of .NET libraries that manage OAuth and OpenId Connect access tokens. Duende.AccessTokenManagement contains a race condition when requesting access tokens using the client credentials flow. Concurrent requests to obtain an access token using differing protocol parameters can return access tokens obtained with the wrong scope, resource indicator, or other protocol parameters. Such usage is somewhat atypical, and only a small percentage of users are likely to be affected. Duende.AccessTokenManagement can request access tokens using the client credentials flow in several ways. In basic usage, the client credentials flow is configured once and the parameters do not vary. In more advanced situations, requests with varying protocol parameters may be made by calling specific overloads of these methods: `HttpContext.GetClientAccessTokenAsync()` and `IClientCredentialsTokenManagementService.GetAccessTokenAsync()`. There are overloads of both of these methods that accept a `TokenRequestParameters` object that customizes token request parameters. However, concurrent requests with varying `TokenRequestParameters` will result in the same token for all concurrent calls. Most users can simply update the NuGet package to the latest version. Customizations of the `IClientCredentialsTokenCache` that derive from the default implementation (`DistributedClientCredentialsTokenCache`) will require a small code change, as its constructor was changed to add a dependency on the `ITokenRequestSynchronization` service. The synchronization service will need to be injected into the derived class and passed to the base constructor. The impact of this vulnerability depends on how Duende.AccessTokenManagement is used and on the security architecture of the solution. Most users will not be vulnerable to this issue. More advanced users may run into this issue by calling the methods specified above with customized token request parameters. The impact of obtaining an access token with different than intended protocol parameters will vary depending on application logic, security architecture, and the authorization policy of the resource servers."
    },
    {
      "lang": "es",
      "value": "Duende.AccessTokenManagement es un conjunto de librerías .NET que administran tokens de acceso de OAuth y OpenId Connect. Duende.AccessTokenManagement contiene una condición de ejecución cuando se solicitan tokens de acceso mediante el flujo de credenciales del cliente. Las solicitudes concurrentes para obtener un token de acceso mediante diferentes parámetros de protocolo pueden devolver tokens de acceso obtenidos con el alcance, el indicador de recursos u otros parámetros de protocolo incorrectos. Este uso es algo atípico y es probable que solo un pequeño porcentaje de usuarios se vea afectado. Duende.AccessTokenManagement puede solicitar tokens de acceso mediante el flujo de credenciales del cliente de varias formas. En el uso básico, el flujo de credenciales del cliente se configura una vez y los parámetros no varían. En situaciones más avanzadas, se pueden realizar solicitudes con parámetros de protocolo variables llamando a sobrecargas específicas de estos métodos: `HttpContext.GetClientAccessTokenAsync()` y `IClientCredentialsTokenManagementService.GetAccessTokenAsync()`. Existen sobrecargas de ambos métodos que aceptan un objeto `TokenRequestParameters` que personaliza los parámetros de solicitud de token. Sin embargo, las solicitudes concurrentes con distintos `TokenRequestParameters` darán como resultado el mismo token para todas las llamadas concurrentes. La mayoría de los usuarios pueden simplemente actualizar el paquete NuGet a la última versión. Las personalizaciones de `IClientCredentialsTokenCache` que derivan de la implementación predeterminada (`DistributedClientCredentialsTokenCache`) requerirán un pequeño cambio de código, ya que su constructor se modificó para agregar una dependencia en el servicio `ITokenRequestSynchronization`. El servicio de sincronización deberá inyectarse en la clase derivada y pasarse al constructor base. El impacto de esta vulnerabilidad depende de cómo se use Duende.AccessTokenManagement y de la arquitectura de seguridad de la solución. La mayoría de los usuarios no serán vulnerables a este problema. Los usuarios más avanzados pueden encontrarse con este problema al llamar a los métodos especificados anteriormente con parámetros de solicitud de token personalizados. El impacto de obtener un token de acceso con parámetros de protocolo diferentes a los previstos variará según la lógica de la aplicación, la arquitectura de seguridad y la política de autorización de los servidores de recursos."
    }
  ],
  "metrics": {
    "cvssMetricV40": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "4.0",
          "vectorString": "CVSS:4.0/AV:N/AC:L/AT:P/PR:N/UI:N/VC:L/VI:L/VA:N/SC:L/SI:L/SA:N/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X",
          "baseScore": 6.3,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "attackRequirements": "PRESENT",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "vulnConfidentialityImpact": "LOW",
          "vulnIntegrityImpact": "LOW",
          "vulnAvailabilityImpact": "NONE",
          "subConfidentialityImpact": "LOW",
          "subIntegrityImpact": "LOW",
          "subAvailabilityImpact": "NONE",
          "exploitMaturity": "NOT_DEFINED",
          "confidentialityRequirement": "NOT_DEFINED",
          "integrityRequirement": "NOT_DEFINED",
          "availabilityRequirement": "NOT_DEFINED",
          "modifiedAttackVector": "NOT_DEFINED",
          "modifiedAttackComplexity": "NOT_DEFINED",
          "modifiedAttackRequirements": "NOT_DEFINED",
          "modifiedPrivilegesRequired": "NOT_DEFINED",
          "modifiedUserInteraction": "NOT_DEFINED",
          "modifiedVulnConfidentialityImpact": "NOT_DEFINED",
          "modifiedVulnIntegrityImpact": "NOT_DEFINED",
          "modifiedVulnAvailabilityImpact": "NOT_DEFINED",
          "modifiedSubConfidentialityImpact": "NOT_DEFINED",
          "modifiedSubIntegrityImpact": "NOT_DEFINED",
          "modifiedSubAvailabilityImpact": "NOT_DEFINED",
          "Safety": "NOT_DEFINED",
          "Automatable": "NOT_DEFINED",
          "Recovery": "NOT_DEFINED",
          "valueDensity": "NOT_DEFINED",
          "vulnerabilityResponseEffort": "NOT_DEFINED",
          "providerUrgency": "NOT_DEFINED"
        }
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-367"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/DuendeSoftware/foss/commit/a33332ddec0ebf3c048ba85427e3c77d47c68dac",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/DuendeSoftware/foss/security/advisories/GHSA-qxj7-2x7w-3mpp",
      "source": "security-advisories@github.com"
    }
  ]
}