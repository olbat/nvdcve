{
  "id": "CVE-2021-41129",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2021-10-06T20:15:19.897",
  "lastModified": "2024-11-21T06:25:32.307",
  "vulnStatus": "Modified",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. A malicious user can modify the contents of a `confirmation_token` input during the two-factor authentication process to reference a cache value not associated with the login attempt. In rare cases this can allow a malicious actor to authenticate as a random user in the Panel. The malicious user must target an account with two-factor authentication enabled, and then must provide a correct two-factor authentication token before being authenticated as that user. Due to a validation flaw in the logic handling user authentication during the two-factor authentication process a malicious user can trick the system into loading credentials for an arbitrary user by modifying the token sent to the server. This authentication flaw is present in the `LoginCheckpointController@__invoke` method which handles two-factor authentication for a user. This controller looks for a request input parameter called `confirmation_token` which is expected to be a 64 character random alpha-numeric string that references a value within the Panel's cache containing a `user_id` value. This value is then used to fetch the user that attempted to login, and lookup their two-factor authentication token. Due to the design of this system, any element in the cache that contains only digits could be referenced by a malicious user, and whatever value is stored at that position would be used as the `user_id`. There are a few different areas of the Panel that store values into the cache that are integers, and a user who determines what those cache keys are could pass one of those keys which would cause this code pathway to reference an arbitrary user. At its heart this is a high-risk login bypass vulnerability. However, there are a few additional conditions that must be met in order for this to be successfully executed, notably: 1.) The account referenced by the malicious cache key must have two-factor authentication enabled. An account without two-factor authentication would cause an exception to be triggered by the authentication logic, thusly exiting this authentication flow. 2.) Even if the malicious user is able to reference a valid cache key that references a valid user account with two-factor authentication, they must provide a valid two-factor authentication token. However, due to the design of this endpoint once a valid user account is found with two-factor authentication enabled there is no rate-limiting present, thusly allowing an attacker to brute force combinations until successful. This leads to a third condition that must be met: 3.) For the duration of this attack sequence the cache key being referenced must continue to exist with a valid `user_id` value. Depending on the specific key being used for this attack, this value may disappear quickly, or be changed by other random user interactions on the Panel, outside the control of the attacker. In order to mitigate this vulnerability the underlying authentication logic was changed to use an encrypted session store that the user is therefore unable to control the value of. This completely removed the use of a user-controlled value being used. In addition, the code was audited to ensure this type of vulnerability is not present elsewhere."
    },
    {
      "lang": "es",
      "value": "Pterodactyl es un panel de administración de servidores de juegos de código abierto construido con PHP 7, React y Go. Un usuario malicioso puede modificar el contenido de una entrada \"confirmation_token\" durante el proceso de autenticación de dos factores para hacer referencia a un valor de caché no asociado con el intento de inicio de sesión. En casos excepcionales, esto puede permitir a un actor malicioso autenticarse como un usuario aleatorio en el Panel. El usuario malicioso debe dirigirse a una cuenta con la autenticación de dos factores habilitada y luego debe proporcionar un token de autenticación de dos factores correcto antes de ser autenticado como dicho usuario. Debido a un fallo de comprobación en la lógica que administra la autenticación de usuario durante el proceso de autenticación de dos factores, un usuario malicioso puede engañar al sistema para que cargue las credenciales de un usuario arbitrario modificando el token enviado al servidor. Este fallo de autenticación está presente en el método \"LoginCheckpointController@__invoke\" que maneja la autenticación de dos factores para un usuario. Este controlador busca un parámetro de entrada de la petición llamado \"confirmation_token\" que se espera que sea una cadena alfanumérica aleatoria de 64 caracteres que hace referencia a un valor dentro de la caché del Panel que contiene un valor \"user_id\". Este valor es usado para recuperar el usuario que ha intentado iniciar sesión y buscar su token de autenticación de dos factores. Debido al diseño de este sistema, cualquier elemento de la caché que contenga sólo dígitos podría ser referenciado por un usuario malicioso, y cualquier valor almacenado en esa posición sería usado como el \"user_id\". Se presentan algunas áreas diferentes del Panel que almacenan valores en la caché que son enteros, y un usuario que determine cuáles son esas claves de la caché podría pasar una de esas claves que causaría que esta vía de código hiciera referencia a un usuario arbitrario. En el fondo, se trata de una vulnerabilidad de alto riesgo para omitir el inicio de sesión. Sin embargo, hay algunas condiciones adicionales que deben cumplirse para que esto se ejecute con éxito, en particular 1.) La cuenta a la que hace referencia la clave de caché maliciosa debe tener habilitada la autenticación de dos factores. Una cuenta sin la autenticación de dos factores causaría una excepción en la lógica de autenticación, saliendo así de este flujo de autenticación. 2.) Incluso si el usuario malicioso es capaz de hacer referencia a una clave de caché válida que hace referencia a una cuenta de usuario válida con autenticación de dos factores, debe proporcionar un token de autenticación de dos factores válido. Sin embargo, debido al diseño de este endpoint, una vez que se encuentra una cuenta de usuario válida con la autenticación de dos factores habilitada, no hay límite de velocidad presente, permitiendo así a un atacante hacer combinaciones de fuerza bruta hasta tener éxito. Esto conlleva a una tercera condición que debe cumplirse: 3.) Durante la duración de esta secuencia de ataque, la clave de caché a la que se hace referencia debe seguir existiendo con un valor válido de \"user_id\". Dependiendo de la llave específica que se esté usando para este ataque, este valor puede desaparecer rápidamente, o ser cambiado por otras interacciones aleatorias del usuario en el Panel, fuera del control del atacante. Para mitigar esta vulnerabilidad, se modificó la lógica de autenticación subyacente para utilizar un almacén de sesión cifrado, cuyo valor no puede ser controlado por el usuario. Esto eliminó por completo el uso de un valor controlado por el usuario. Además, se auditó el código para asegurar que este tipo de vulnerabilidad no está presente en otros lugares"
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 8.1,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "HIGH",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.2,
        "impactScore": 5.9
      }
    ],
    "cvssMetricV2": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "2.0",
          "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P",
          "baseScore": 6.8,
          "accessVector": "NETWORK",
          "accessComplexity": "MEDIUM",
          "authentication": "NONE",
          "confidentialityImpact": "PARTIAL",
          "integrityImpact": "PARTIAL",
          "availabilityImpact": "PARTIAL"
        },
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 8.6,
        "impactScore": 6.4,
        "acInsufInfo": false,
        "obtainAllPrivilege": false,
        "obtainUserPrivilege": false,
        "obtainOtherPrivilege": false,
        "userInteractionRequired": false
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-502"
        },
        {
          "lang": "en",
          "value": "CWE-639"
        },
        {
          "lang": "en",
          "value": "CWE-807"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-287"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:pterodactyl:panel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "1.0.0",
              "versionEndExcluding": "1.6.2",
              "matchCriteriaId": "39D8D800-578B-42AB-BFCA-6FA76ABDDAE7"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/pterodactyl/panel/blob/v1.6.2/CHANGELOG.md#v162",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/commit/4a84c36009be10dbd83051ac1771662c056e4977",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/releases/tag/v1.6.2",
      "source": "security-advisories@github.com",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/security/advisories/GHSA-5vfx-8w6m-h3v4",
      "source": "security-advisories@github.com",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/blob/v1.6.2/CHANGELOG.md#v162",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/commit/4a84c36009be10dbd83051ac1771662c056e4977",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/releases/tag/v1.6.2",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Release Notes",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/pterodactyl/panel/security/advisories/GHSA-5vfx-8w6m-h3v4",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    }
  ]
}