{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2022-49350",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/35b42dce619701f1300fb8498dae82c9bb1f0263",
          "name": "https://git.kernel.org/stable/c/35b42dce619701f1300fb8498dae82c9bb1f0263",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/5534bcd7c40299862237c4a8fd9c5031b3db1538",
          "name": "https://git.kernel.org/stable/c/5534bcd7c40299862237c4a8fd9c5031b3db1538",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/59fa94cddf9eef8d8dae587373eed8b8f4eb11d7",
          "name": "https://git.kernel.org/stable/c/59fa94cddf9eef8d8dae587373eed8b8f4eb11d7",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/6a90a44d53428a3bf01bd80df9ba78b19959270c",
          "name": "https://git.kernel.org/stable/c/6a90a44d53428a3bf01bd80df9ba78b19959270c",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/7759c3222815b945a94b212bc0c6cdec475cfec2",
          "name": "https://git.kernel.org/stable/c/7759c3222815b945a94b212bc0c6cdec475cfec2",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/ab64ec2c75683f30ccde9eaaf0761002f901aa12",
          "name": "https://git.kernel.org/stable/c/ab64ec2c75683f30ccde9eaaf0761002f901aa12",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/f2f0f8c18b60ca64ff50892ed899cf1c77864755",
          "name": "https://git.kernel.org/stable/c/f2f0f8c18b60ca64ff50892ed899cf1c77864755",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/f5c68137f1191ba3fcf6260ec71b30be2e2bf4c3",
          "name": "https://git.kernel.org/stable/c/f5c68137f1191ba3fcf6260ec71b30be2e2bf4c3",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mdio: unexport __init-annotated mdio_bus_init()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because the only in-tree call-site,\ndrivers/net/phy/phy_device.c is never compiled as modular.\n(CONFIG_PHYLIB is boolean)"
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-02-26T07:01Z",
  "lastModifiedDate": "2025-02-26T07:01Z"
}