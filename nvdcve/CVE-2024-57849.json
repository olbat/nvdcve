{
  "id": "CVE-2024-57849",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-11T15:15:07.290",
  "lastModified": "2025-09-26T20:19:59.767",
  "vulnStatus": "Analyzed",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/cpum_sf: Handle CPU hotplug remove during sampling\n\nCPU hotplug remove handling triggers the following function\ncall sequence:\n\n   CPUHP_AP_PERF_S390_SF_ONLINE  --> s390_pmu_sf_offline_cpu()\n   ...\n   CPUHP_AP_PERF_ONLINE          --> perf_event_exit_cpu()\n\nThe s390 CPUMF sampling CPU hotplug handler invokes:\n\n s390_pmu_sf_offline_cpu()\n +-->  cpusf_pmu_setup()\n       +--> setup_pmc_cpu()\n            +--> deallocate_buffers()\n\nThis function de-allocates all sampling data buffers (SDBs) allocated\nfor that CPU at event initialization. It also clears the\nPMU_F_RESERVED bit. The CPU is gone and can not be sampled.\n\nWith the event still being active on the removed CPU, the CPU event\nhotplug support in kernel performance subsystem triggers the\nfollowing function calls on the removed CPU:\n\n  perf_event_exit_cpu()\n  +--> perf_event_exit_cpu_context()\n       +--> __perf_event_exit_context()\n\t    +--> __perf_remove_from_context()\n\t         +--> event_sched_out()\n\t              +--> cpumsf_pmu_del()\n\t                   +--> cpumsf_pmu_stop()\n                                +--> hw_perf_event_update()\n\nto stop and remove the event. During removal of the event, the\nsampling device driver tries to read out the remaining samples from\nthe sample data buffers (SDBs). But they have already been freed\n(and may have been re-assigned). This may lead to a use after free\nsituation in which case the samples are most likely invalid. In the\nbest case the memory has not been reassigned and still contains\nvalid data.\n\nRemedy this situation and check if the CPU is still in reserved\nstate (bit PMU_F_RESERVED set). In this case the SDBs have not been\nreleased an contain valid data. This is always the case when\nthe event is removed (and no CPU hotplug off occured).\nIf the PMU_F_RESERVED bit is not set, the SDB buffers are gone."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: s390/cpum_sf: Controlar la eliminación de hotplug de la CPU durante el muestreo la gestión de la eliminación de hotplug de la CPU activa la siguiente secuencia de llamada de función: CPUHP_AP_PERF_S390_SF_ONLINE --&gt; s390_pmu_sf_offline_cpu() ... CPUHP_AP_PERF_ONLINE --&gt; perf_event_exit_cpu() El controlador de hotplug de la CPU de muestreo s390 CPUMF invoca: s390_pmu_sf_offline_cpu() +--&gt; cpusf_pmu_setup() +--&gt; setup_pmc_cpu() +--&gt; deallocate_buffers() Esta función anula la asignación de todos los búferes de datos de muestreo (SDB) asignados para esa CPU en la inicialización del evento. También borra el bit PMU_F_RESERVED. La CPU desaparece y no se puede muestrear. Mientras el evento sigue activo en la CPU eliminada, la compatibilidad con hot plug de eventos de CPU en el subsistema de rendimiento del núcleo activa las siguientes llamadas de función en la CPU eliminada: perf_event_exit_cpu() +--&gt; perf_event_exit_cpu_context() +--&gt; __perf_event_exit_context() +--&gt; __perf_remove_from_context() +--&gt; event_sched_out() +--&gt; cpumsf_pmu_del() +--&gt; cpumsf_pmu_stop() +--&gt; hw_perf_event_update() para detener y eliminar el evento. Durante la eliminación del evento, el controlador del dispositivo de muestreo intenta leer las muestras restantes de los búferes de datos de muestra (SDB). Pero ya se han liberado (y es posible que se hayan reasignado). Esto puede provocar una situación de use after free, en cuyo caso es muy probable que las muestras no sean válidas. En el mejor de los casos, la memoria no se ha reasignado y aún contiene datos válidos. Solucione esta situación y compruebe si la CPU sigue en estado reservado (bit PMU_F_RESERVED activado). En este caso, los SDB no se han liberado y contienen datos válidos. Esto siempre ocurre cuando se elimina el evento (y no se ha producido ninguna desconexión en caliente de la CPU). Si el bit PMU_F_RESERVED no está activado, los búferes SDB desaparecen."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 7.8,
          "baseSeverity": "HIGH",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 1.8,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-416"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "5.4.287",
              "matchCriteriaId": "DC7D5C80-B677-4131-A399-3366D7F3961C"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.5",
              "versionEndExcluding": "5.10.231",
              "matchCriteriaId": "B5C644CC-2BD7-4E32-BC54-8DCC7ABE9935"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.11",
              "versionEndExcluding": "5.15.174",
              "matchCriteriaId": "419FD073-1517-4FD5-8158-F94BC68A1E89"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.16",
              "versionEndExcluding": "6.1.120",
              "matchCriteriaId": "09AC6122-E2A4-40FE-9D33-268A1B2EC265"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.2",
              "versionEndExcluding": "6.6.66",
              "matchCriteriaId": "29A976AD-B9AB-4A95-9F08-7669F8847EB9"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.7",
              "versionEndExcluding": "6.12.5",
              "matchCriteriaId": "9501D045-7A94-42CA-8B03-821BE94A65B7"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/06a92f810df8037ca36157282ddcbefdcaf049b8",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/238e3af849dfdcb1faed544349f7025e533f9aab",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/99192c735ed4bfdff0d215ec85c8a87a677cb898",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/a0bd7dacbd51c632b8e2c0500b479af564afadf3",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/a69752f1e5de817941a2ea0609254f6f25acd274",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/b5be6a0bb639d165c8418d8dddd8f322587be8be",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://git.kernel.org/stable/c/be54e6e0f93a39a9c00478d70d12956a5f3d5b9b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    }
  ]
}