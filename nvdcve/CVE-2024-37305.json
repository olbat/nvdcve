{
  "id": "CVE-2024-37305",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-06-17T20:15:12.880",
  "lastModified": "2024-11-21T09:23:34.327",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "oqs-provider is a provider for the OpenSSL 3 cryptography library that adds support for post-quantum cryptography in TLS, X.509, and S/MIME using post-quantum algorithms from liboqs. Flaws have been identified in the way oqs-provider handles lengths decoded with DECODE_UINT32 at the start of serialized hybrid (traditional + post-quantum) keys and signatures. Unchecked length values are later used for memory reads and writes; malformed input can lead to crashes or information leakage. Handling of plain/non-hybrid PQ key operation is not affected. This issue has been patched in in v0.6.1. All users are advised to upgrade. There are no workarounds for this issue."
    },
    {
      "lang": "es",
      "value": "oqs-provider es un proveedor de la librería de criptografía OpenSSL 3 que agrega soporte para criptografía poscuántica en TLS, X.509 y S/MIME utilizando algoritmos poscuánticos de liboqs. Se han identificado fallas en la forma en que oqs-provider maneja las longitudes decodificadas con DECODE_UINT32 al inicio de firmas y claves híbridas serializadas (tradicionales + poscuánticas). Los valores de longitud no verificados se utilizan posteriormente para lecturas y escrituras de memoria; La entrada mal formada puede provocar fallas o fugas de información. El manejo de la operación de clave PQ simple/no híbrida no se ve afectado. Este problema se solucionó en la versión 0.6.1. Se recomienda a todos los usuarios que actualicen. No existen workarounds para este problema."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:H",
          "baseScore": 8.2,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "NONE",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 4.2
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-120"
        },
        {
          "lang": "en",
          "value": "CWE-130"
        },
        {
          "lang": "en",
          "value": "CWE-190"
        },
        {
          "lang": "en",
          "value": "CWE-680"
        },
        {
          "lang": "en",
          "value": "CWE-805"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/open-quantum-safe/oqs-provider/pull/416",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/open-quantum-safe/oqs-provider/security/advisories/GHSA-pqvr-5cr8-v6fx",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/open-quantum-safe/oqs-provider/pull/416",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "https://github.com/open-quantum-safe/oqs-provider/security/advisories/GHSA-pqvr-5cr8-v6fx",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}