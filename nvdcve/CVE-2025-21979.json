{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2025-21979",
      "ASSIGNER": "cve@kernel.org"
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/0272d4af7f92997541d8bbf4c51918b93ded6ee2",
          "name": "https://git.kernel.org/stable/c/0272d4af7f92997541d8bbf4c51918b93ded6ee2",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/72d520476a2fab6f3489e8388ab524985d6c4b90",
          "name": "https://git.kernel.org/stable/c/72d520476a2fab6f3489e8388ab524985d6c4b90",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/75d262ad3c36d52852d764588fcd887f0fcd9138",
          "name": "https://git.kernel.org/stable/c/75d262ad3c36d52852d764588fcd887f0fcd9138",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/a5158d67bff06cb6fea31be39aeb319fd908ed8e",
          "name": "https://git.kernel.org/stable/c/a5158d67bff06cb6fea31be39aeb319fd908ed8e",
          "refsource": "",
          "tags": []
        },
        {
          "url": "https://git.kernel.org/stable/c/dea22de162058216a90f2706f0d0b36f0ff309fd",
          "name": "https://git.kernel.org/stable/c/dea22de162058216a90f2706f0d0b36f0ff309fd",
          "refsource": "",
          "tags": []
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nwifi: cfg80211: cancel wiphy_work before freeing wiphy\n\nA wiphy_work can be queued from the moment the wiphy is allocated and\ninitialized (i.e. wiphy_new_nm). When a wiphy_work is queued, the\nrdev::wiphy_work is getting queued.\n\nIf wiphy_free is called before the rdev::wiphy_work had a chance to run,\nthe wiphy memory will be freed, and then when it eventally gets to run\nit'll use invalid memory.\n\nFix this by canceling the work before freeing the wiphy."
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "impact": {},
  "publishedDate": "2025-04-01T16:15Z",
  "lastModifiedDate": "2025-04-01T16:15Z"
}