{
  "cve": {
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
      "ID": "CVE-2023-52592",
      "ASSIGNER": ""
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [

          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "url": "https://git.kernel.org/stable/c/90dbf4535668042fac0d7201ce9e2c8c770c578a",
          "name": "https://git.kernel.org/stable/c/90dbf4535668042fac0d7201ce9e2c8c770c578a",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/12473265f50c1e27b0dfd9735738ac418c4bfcce",
          "name": "https://git.kernel.org/stable/c/12473265f50c1e27b0dfd9735738ac418c4bfcce",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/5f3e436832e86b826a6450eb8d1aaa51205a758e",
          "name": "https://git.kernel.org/stable/c/5f3e436832e86b826a6450eb8d1aaa51205a758e",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/ab26541270c722eedf8eefd62797c3ce3d18a91b",
          "name": "https://git.kernel.org/stable/c/ab26541270c722eedf8eefd62797c3ce3d18a91b",
          "refsource": "",
          "tags": [

          ]
        },
        {
          "url": "https://git.kernel.org/stable/c/fc3a5534e2a8855427403113cbeb54af5837bbe0",
          "name": "https://git.kernel.org/stable/c/fc3a5534e2a8855427403113cbeb54af5837bbe0",
          "refsource": "",
          "tags": [

          ]
        }
      ]
    },
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibbpf: Fix NULL pointer dereference in bpf_object__collect_prog_relos\n\nAn issue occurred while reading an ELF file in libbpf.c during fuzzing:\n\n\tProgram received signal SIGSEGV, Segmentation fault.\n\t0x0000000000958e97 in bpf_object.collect_prog_relos () at libbpf.c:4206\n\t4206 in libbpf.c\n\t(gdb) bt\n\t#0 0x0000000000958e97 in bpf_object.collect_prog_relos () at libbpf.c:4206\n\t#1 0x000000000094f9d6 in bpf_object.collect_relos () at libbpf.c:6706\n\t#2 0x000000000092bef3 in bpf_object_open () at libbpf.c:7437\n\t#3 0x000000000092c046 in bpf_object.open_mem () at libbpf.c:7497\n\t#4 0x0000000000924afa in LLVMFuzzerTestOneInput () at fuzz/bpf-object-fuzzer.c:16\n\t#5 0x000000000060be11 in testblitz_engine::fuzzer::Fuzzer::run_one ()\n\t#6 0x000000000087ad92 in tracing::span::Span::in_scope ()\n\t#7 0x00000000006078aa in testblitz_engine::fuzzer::util::walkdir ()\n\t#8 0x00000000005f3217 in testblitz_engine::entrypoint::main::{{closure}} ()\n\t#9 0x00000000005f2601 in main ()\n\t(gdb)\n\nscn_data was null at this code(tools/lib/bpf/src/libbpf.c):\n\n\tif (rel->r_offset % BPF_INSN_SZ || rel->r_offset >= scn_data->d_size) {\n\nThe scn_data is derived from the code above:\n\n\tscn = elf_sec_by_idx(obj, sec_idx);\n\tscn_data = elf_sec_data(obj, scn);\n\n\trelo_sec_name = elf_sec_str(obj, shdr->sh_name);\n\tsec_name = elf_sec_name(obj, scn);\n\tif (!relo_sec_name || !sec_name)// don't check whether scn_data is NULL\n\t\treturn -EINVAL;\n\nIn certain special scenarios, such as reading a malformed ELF file,\nit is possible that scn_data may be a null pointer"
        }
      ]
    }
  },
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [

    ]
  },
  "impact": {
  },
  "publishedDate": "2024-03-06T07:15Z",
  "lastModifiedDate": "2024-03-06T07:15Z"
}