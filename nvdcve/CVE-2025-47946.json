{
  "id": "CVE-2025-47946",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-05-19T20:15:26.150",
  "lastModified": "2025-05-21T20:25:16.407",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "Symfony UX is an initiative and set of libraries to integrate JavaScript tools into applications. Prior to version 2.25.1, rendering `{{ attributes }}` or using any method that returns a `ComponentAttributes` instance (e.g. `only()`, `defaults()`, `without()`) ouputs attribute values directly without escaping. If these values are unsafe (e.g. contain user input), this can lead to HTML attribute injection and XSS vulnerabilities. The issue is fixed in version `2.25.1` of `symfony/ux-twig-component` Those who use `symfony/ux-live-component` must also update it to `2.25.1` to benefit from the fix, as it reuses the `ComponentAttributes` class internally. As a workaround, avoid rendering `{{ attributes }}` or derived objects directly if it may contain untrusted values.\nInstead, use `{{ attributes.render('name') }}` for safe output of individual attributes."
    },
    {
      "lang": "es",
      "value": "Symfony UX es una iniciativa y un conjunto de librerías para integrar herramientas de JavaScript en aplicaciones. Antes de la versión 2.25.1, renderizar `{{ atributos }}` o usar cualquier método que devuelva una instancia de `ComponentAttributes` (por ejemplo, `only()`, `defaults()`, `without()`) genera valores de atributos directamente sin escapar. Si estos valores no son seguros (por ejemplo, contienen entrada del usuario), esto puede llevar a la inyección de atributos HTML y vulnerabilidades XSS. El problema se solucionó en la versión `2.25.1` de `symfony/ux-twig-component` Aquellos que usan `symfony/ux-live-component` también deben actualizarlo a `2.25.1` para beneficiarse de la corrección, ya que reutiliza la clase `ComponentAttributes` internamente. Como workaround, evite renderizar `{{ atributos }}` u objetos derivados directamente si puede contener valores no confiables. En su lugar, utilice `{{attributes.render('name') }}` para una salida segura de atributos individuales."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "baseScore": 6.1,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "REQUIRED",
          "scope": "CHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "LOW",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 2.7
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/symfony/ux/commit/b5d1c85995c128cb926d47a96cfbfbd500b643a8",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/symfony/ux/security/advisories/GHSA-5j3w-5pcr-f8hg",
      "source": "security-advisories@github.com"
    }
  ]
}