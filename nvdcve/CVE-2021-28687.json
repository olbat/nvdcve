{
  "id": "CVE-2021-28687",
  "sourceIdentifier": "security@xen.org",
  "published": "2021-06-11T15:15:11.153",
  "lastModified": "2024-11-21T06:00:08.673",
  "vulnStatus": "Modified",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "HVM soft-reset crashes toolstack libxl requires all data structures passed across its public interface to be initialized before use and disposed of afterwards by calling a specific set of functions. Many internal data structures also require this initialize / dispose discipline, but not all of them. When the \"soft reset\" feature was implemented, the libxl__domain_suspend_state structure didn't require any initialization or disposal. At some point later, an initialization function was introduced for the structure; but the \"soft reset\" path wasn't refactored to call the initialization function. When a guest nwo initiates a \"soft reboot\", uninitialized data structure leads to an assert() when later code finds the structure in an unexpected state. The effect of this is to crash the process monitoring the guest. How this affects the system depends on the structure of the toolstack. For xl, this will have no security-relevant effect: every VM has its own independent monitoring process, which contains no state. The domain in question will hang in a crashed state, but can be destroyed by `xl destroy` just like any other non-cooperating domain. For daemon-based toolstacks linked against libxl, such as libvirt, this will crash the toolstack, losing the state of any in-progress operations (localized DoS), and preventing further administrator operations unless the daemon is configured to restart automatically (system-wide DoS). If crashes \"leak\" resources, then repeated crashes could use up resources, also causing a system-wide DoS."
    },
    {
      "lang": "es",
      "value": "HVM soft-reset bloquea toolstack libxl requiere que todas las estructuras de datos pasadas a través de su interfaz pública sean inicializadas antes de usarlas y eliminadas después llamando a un conjunto específico de funciones. Muchas estructuras de datos internas también requieren esta disciplina de inicialización y eliminación, pero no todas. Cuando se implementó la funcionalidad \"soft reset\", la estructura libxl__domain_suspend_state no requería ninguna inicialización o eliminación. En algún momento posterior, se introdujo una función de inicialización para la estructura; pero la ruta \"soft reset\" no se refactorizó para llamar a la función de inicialización. Cuando un nwo invitado inicia un \"soft reset\", la estructura de datos no inicializada conlleva a una función assert() cuando el código posterior encuentra la estructura en un estado inesperado. El efecto de esto es que se bloquea el proceso que monitoriza el huésped. Cómo afecta esto al sistema depende de la estructura de la pila de herramientas. Para xl, esto no tendrá ningún efecto relevante para la seguridad: cada VM presenta su propio proceso de monitorización independiente, que no contiene ningún estado. El dominio en cuestión se colgará en un estado de colapso, pero puede ser destruido por \"xl destroy\" como cualquier otro dominio no cooperante. Para las pilas de herramientas basadas en daemon enlazadas con libxl, como libvirt, esto bloqueará la pila de herramientas, perdiendo el estado de cualquier operación en curso (DoS localizado), e impidiendo más operaciones del administrador a menos que el demonio esté configurado para reiniciarse automáticamente (DoS en todo el sistema). Si los bloqueos \"leak\" recursos, entonces los bloqueos repetidos podrían usar recursos, causando también una DoS a nivel de sistema"
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "baseScore": 5.5,
          "baseSeverity": "MEDIUM",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 1.8,
        "impactScore": 3.6
      }
    ],
    "cvssMetricV2": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "2.0",
          "vectorString": "AV:L/AC:L/Au:N/C:N/I:N/A:C",
          "baseScore": 4.9,
          "accessVector": "LOCAL",
          "accessComplexity": "LOW",
          "authentication": "NONE",
          "confidentialityImpact": "NONE",
          "integrityImpact": "NONE",
          "availabilityImpact": "COMPLETE"
        },
        "baseSeverity": "MEDIUM",
        "exploitabilityScore": 3.9,
        "impactScore": 6.9,
        "acInsufInfo": false,
        "obtainAllPrivilege": false,
        "obtainUserPrivilege": false,
        "obtainOtherPrivilege": false,
        "userInteractionRequired": false
      }
    ]
  },
  "weaknesses": [
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-909"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:xen:xen:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "4.12",
              "versionEndIncluding": "4.15.0",
              "matchCriteriaId": "3E9CE2ED-57BB-4DE3-85AF-3434645E0B96"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:xen:xen:4.15.0:rc1:*:*:*:*:*:*",
              "matchCriteriaId": "68E7691E-21CB-46E3-823B-4262C9E5C33E"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://security.gentoo.org/glsa/202107-30",
      "source": "security@xen.org",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://xenbits.xenproject.org/xsa/advisory-368.txt",
      "source": "security@xen.org",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://security.gentoo.org/glsa/202107-30",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://xenbits.xenproject.org/xsa/advisory-368.txt",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ]
}