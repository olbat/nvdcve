{
  "id": "CVE-2023-48703",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-03-06T20:15:47.343",
  "lastModified": "2024-11-21T08:32:17.563",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "RobotsAndPencils go-saml, a SAML client library written in Go, contains an authentication bypass vulnerability in all known versions. This is due to how the `xmlsec1` command line tool is called internally to verify the signature of SAML assertions. When `xmlsec1` is used without defining the enabled key data, the origin of the public key for the signature verification is, unfortunately, not restricted. That means an attacker can sign the SAML assertions themselves and provide the required public key (e.g. an RSA key) directly embedded in the SAML token. Projects still using RobotsAndPencils/go-saml should move to another SAML library or alternatively remove support for SAML from their projects. The vulnerability can likely temporarily be fixed by forking the go-saml project and adding the command line argument `--enabled-key-data` and specifying a value such as `x509` or `raw-x509-cert` when calling the `xmlsec1` binary in the verify function. Please note that this workaround must be carefully tested before it can be used."
    },
    {
      "lang": "es",
      "value": "RobotsAndPencils go-saml, una librería cliente SAML escrita en Go, contiene una vulnerabilidad de omisión de autenticación en todas las versiones conocidas. Esto se debe a cómo se llama internamente a la herramienta de línea de comando `xmlsec1` para verificar la firma de las aserciones SAML. Cuando se utiliza `xmlsec1` sin definir los datos de la clave habilitada, desafortunadamente el origen de la clave pública para la verificación de la firma no está restringido. Eso significa que un atacante puede firmar las afirmaciones SAML por sí mismo y proporcionar la clave pública requerida (por ejemplo, una clave RSA) directamente integrada en el token SAML. Los proyectos que todavía usan RobotsAndPencils/go-saml deben trasladarse a otra librería SAML o, alternativamente, eliminar la compatibilidad con SAML de sus proyectos. Es probable que la vulnerabilidad pueda solucionarse temporalmente bifurcando el proyecto go-saml y agregando el argumento de línea de comando `--enabled-key-data` y especificando un valor como `x509` o `raw-x509-cert` al llamar al ` xmlsec1` binario en la función de verificación. Tenga en cuenta que esta workaround se debe probar cuidadosamente antes de poder utilizarla."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "baseScore": 7.5,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "NONE",
          "integrityImpact": "HIGH",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 3.6
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-287"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://securitylab.github.com/advisories/GHSL-2023-121_go-saml__archived_/",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://securitylab.github.com/advisories/GHSL-2023-121_go-saml__archived_/",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}