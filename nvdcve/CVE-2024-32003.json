{
  "id": "CVE-2024-32003",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-04-12T21:15:11.617",
  "lastModified": "2024-11-21T09:14:19.453",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "wn-dusk-plugin (Dusk plugin) is a plugin which integrates Laravel Dusk browser testing into Winter CMS. The Dusk plugin provides some special routes as part of its testing framework to allow a browser environment (such as headless Chrome) to act as a user in the Backend or User plugin without having to go through authentication. This route is `[[URL]]/_dusk/login/[[USER ID]]/[[MANAGER]]` - where `[[URL]]` is the base URL of the site, `[[USER ID]]` is the ID of the user account and `[[MANAGER]]` is the authentication manager (either `backend` for Backend, or `user` for the User plugin). If a configuration of a site using the Dusk plugin is set up in such a way that the Dusk plugin is available publicly and the test cases in Dusk are run with live data, this route may potentially be used to gain access to any user account in either the Backend or User plugin without authentication. As indicated in the `README`, this plugin should only be used in development and should *NOT* be used in a production instance. It is specifically recommended that the plugin be installed as a development dependency only in Composer. In order to remediate this issue, the special routes used above will now no longer be registered unless the `APP_ENV` environment variable is specifically set to `dusk`. Since Winter by default does not use this environment variable and it is not populated by default, it will only exist if Dusk's automatic configuration is used (which won't exhibit this vulnerability) or if a developer manually specifies it in their configuration. The automatic configuration performed by the Dusk plugin has also been hardened by default to use sane defaults and not allow external environment variables to leak into this configuration. This will only affect users in which the Winter CMS installation meets ALL the following criteria: 1. The Dusk plugin is installed in the Winter CMS instance. 2. The application is in production mode (ie. the `debug` config value is set to `true` in `config/app.php`). 3. The Dusk plugin's automatic configuration has been overridden, either by providing a custom `.env.dusk` file or by providing custom configuration in the `config/dusk` folder, or by providing configuration environment variables externally. 4. The environment has been configured to use production data in the database for testing, and not the temporary SQLite database that Dusk uses by default. 5. The application is connectable via the web. This issue has been fixed in version 2.1.0. Users are advised to upgrade."
    },
    {
      "lang": "es",
      "value": "wn-dusk-plugin (complemento Dusk) es un complemento que integra las pruebas del navegador Laravel Dusk en Winter CMS. El complemento Dusk proporciona algunas rutas especiales como parte de su framework de prueba para permitir que un entorno de navegador (como Chrome sin cabeza) actúe como un usuario en el complemento Backend o Usuario sin tener que pasar por la autenticación. Esta ruta es `[[URL]]/_dusk/login/[[ID DE USUARIO]]/[[MANAGER]]` - donde `[[URL]]` es la URL base del sitio, `[[ID DE USUARIO] ]` es el ID de la cuenta de usuario y `[[MANAGER]]` es el administrador de autenticación (ya sea `backend` para Backend o `user` para el complemento de usuario). Si la configuración de un sitio que utiliza el complemento Dusk se configura de tal manera que el complemento Dusk esté disponible públicamente y los casos de prueba en Dusk se ejecuten con datos en vivo, esta ruta puede usarse potencialmente para obtener acceso a cualquier cuenta de usuario en ya sea el complemento Backend o Usuario sin autenticación. Como se indica en el `README`, este complemento solo debe usarse en desarrollo y *NO* debe usarse en una instancia de producción. Se recomienda específicamente que el complemento se instale como una dependencia de desarrollo solo en Composer. Para solucionar este problema, las rutas especiales utilizadas anteriormente ya no se registrarán a menos que la variable de entorno `APP_ENV` esté específicamente configurada en `dusk`. Dado que Winter por defecto no usa esta variable de entorno y no se completa de manera predeterminada, solo existirá si se usa la configuración automática de Dusk (que no exhibirá esta vulnerabilidad) o si un desarrollador la especifica manualmente en su configuración. La configuración automática realizada por el complemento Dusk también se ha reforzado de forma predeterminada para utilizar valores predeterminados sensatos y no permitir que variables de entorno externas se filtren en esta configuración. Esto solo afectará a los usuarios en los que la instalación de Winter CMS cumpla TODOS los siguientes criterios: 1. El complemento Dusk está instalado en la instancia de Winter CMS. 2. La aplicación está en modo de producción (es decir, el valor de configuración `debug` está establecido en `true` en `config/app.php`). 3. La configuración automática del complemento Dusk ha sido anulada, ya sea proporcionando un archivo `.env.dusk` personalizado o proporcionando una configuración personalizada en la carpeta `config/dusk`, o proporcionando variables de entorno de configuración externamente. 4. El entorno se ha configurado para usar datos de producción en la base de datos para pruebas, y no la base de datos SQLite temporal que Dusk usa por defecto. 5. La aplicación se puede conectar a través de la web. Este problema se solucionó en la versión 2.1.0. Se recomienda a los usuarios que actualicen."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
          "baseScore": 8.8,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "REQUIRED",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-269"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/wintercms/wn-dusk-plugin/blob/main/README.md",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/wintercms/wn-dusk-plugin/security/advisories/GHSA-chcp-g9j5-3xxx",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/wintercms/wn-dusk-plugin/blob/main/README.md",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    },
    {
      "url": "https://github.com/wintercms/wn-dusk-plugin/security/advisories/GHSA-chcp-g9j5-3xxx",
      "source": "af854a3a-2127-422b-91ae-364da2661108"
    }
  ]
}