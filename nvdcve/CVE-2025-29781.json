{
  "id": "CVE-2025-29781",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2025-03-17T22:15:14.493",
  "lastModified": "2025-03-18T15:16:00.747",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [

  ],
  "descriptions": [
    {
      "lang": "en",
      "value": "The Bare Metal Operator (BMO) implements a Kubernetes API for managing bare metal hosts in Metal3. Baremetal Operator enables users to load Secret from arbitrary namespaces upon deployment of the namespace scoped Custom Resource `BMCEventSubscription`. Prior to versions 0.8.1 and 0.9.1, an adversary Kubernetes account with only namespace level roles (e.g. a tenant controlling a namespace) may create a `BMCEventSubscription` in his authorized namespace and then load Secrets from his unauthorized namespaces to his authorized namespace via the Baremetal Operator, causing Secret Leakage. The patch makes BMO refuse to read Secrets from other namespace than where the corresponding BMH resource is. The patch does not change the `BMCEventSubscription` API in BMO, but stricter validation will fail the request at admission time. It will also prevent the controller reading such Secrets, in case the BMCES CR has already been deployed. The issue exists for all versions of BMO, and is patched in BMO releases v0.9.1 and v0.8.1. Prior upgrading to patched BMO version, duplicate any existing Secret pointed to by `BMCEventSubscription`'s `httpHeadersRef` to the same namespace where the corresponding BMH exists. After upgrade, remove the old Secrets. As a workaround, the operator can configure BMO RBAC to be namespace scoped, instead of cluster scoped, to prevent BMO from accessing Secrets from other namespaces, and/or use `WATCH_NAMESPACE` configuration option to limit BMO to single namespace."
    },
    {
      "lang": "es",
      "value": "Bare Metal Operator (BMO) implementa una API de Kubernetes para administrar hosts de hardware en Metal3. Este operador permite a los usuarios cargar secretos desde espacios de nombres arbitrarios al implementar el recurso personalizado `BMCEventSubscription` con ámbito de espacio de nombres. Antes de las versiones 0.8.1 y 0.9.1, una cuenta de Kubernetes adversaria con roles solo a nivel de espacio de nombres (por ejemplo, un inquilino que controla un espacio de nombres) podía crear una `BMCEventSubscription` en su espacio de nombres autorizado y luego cargar secretos desde sus espacios de nombres no autorizados a su espacio de nombres autorizado mediante el Baremetal Operator, lo que causaba una fuga de secretos. El parche hace que BMO se niegue a leer secretos de un espacio de nombres diferente al del recurso BMH correspondiente. El parche no modifica la API `BMCEventSubscription` en BMO, pero una validación más estricta fallará la solicitud en el momento de la admisión. También impedirá que el controlador lea dichos secretos, en caso de que el BMCES CR ya se haya implementado. El problema existe en todas las versiones de BMO y está corregido en las versiones 0.9.1 y 0.8.1 de BMO. Antes de actualizar a la versión corregida de BMO, duplique cualquier secreto existente al que apunte `httpHeadersRef` de `BMCEventSubscription` en el mismo espacio de nombres donde exista el BMH correspondiente. Tras la actualización, elimine los secretos antiguos. Como workaround, el operador puede configurar el RBAC de BMO para que tenga alcance de espacio de nombres, en lugar de clúster, para evitar que BMO acceda a secretos de otros espacios de nombres, o bien usar la opción de configuración `WATCH_NAMESPACE` para limitar BMO a un solo espacio de nombres."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N",
          "baseScore": 6.5,
          "baseSeverity": "MEDIUM",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "NONE",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 2.0,
        "impactScore": 4.0
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-200"
        },
        {
          "lang": "en",
          "value": "CWE-653"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/metal3-io/baremetal-operator/commit/19f8443b1fe182f76dd81b43122e8dd102f8b94c",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/metal3-io/baremetal-operator/pull/2321",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/metal3-io/baremetal-operator/pull/2322",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/metal3-io/baremetal-operator/security/advisories/GHSA-c98h-7hp9-v9hq",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md",
      "source": "security-advisories@github.com"
    },
    {
      "url": "https://github.com/metal3-io/metal3-docs/blob/main/design/baremetal-operator/bmc-events.md",
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0"
    }
  ]
}