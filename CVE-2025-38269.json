{
  "id": "CVE-2025-38269",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-07-10T08:15:25.083",
  "lastModified": "2025-07-10T13:17:30.017",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: exit after state insertion failure at btrfs_convert_extent_bit()\n\nIf insert_state() state failed it returns an error pointer and we call\nextent_io_tree_panic() which will trigger a BUG() call. However if\nCONFIG_BUG is disabled, which is an uncommon and exotic scenario, then\nwe fallthrough and call cache_state() which will dereference the error\npointer, resulting in an invalid memory access.\n\nSo jump to the 'out' label after calling extent_io_tree_panic(), it also\nmakes the code more clear besides dealing with the exotic scenario where\nCONFIG_BUG is disabled."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: salida tras fallo de inserción de estado en btrfs_convert_extent_bit(). Si el estado insert_state() falla, devuelve un puntero de error y se llama a extent_io_tree_panic(), lo que activa una llamada a BUG(). Sin embargo, si CONFIG_BUG está deshabilitado (un escenario inusual y exótico), se pasa a la siguiente etapa y se llama a cache_state(), lo que desreferencia el puntero de error, lo que resulta en un acceso no válido a memoria. Por lo tanto, al saltar a la etiqueta \"out\" después de llamar a extent_io_tree_panic(), se aclara el código, además de abordar el escenario exótico donde CONFIG_BUG está deshabilitado."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/3bf179e36da917c5d9bec71c714573ed1649b7c1",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/58c50f45e1821a04d61b62514f9bd34afe67c622",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/8d9d32088e304e2bc444a3087cab0bbbd9951866",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}