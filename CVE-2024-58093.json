{
  "id": "CVE-2024-58093",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-04-16T15:15:53.220",
  "lastModified": "2025-10-28T18:53:45.890",
  "vulnStatus": "Analyzed",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nPCI/ASPM: Fix link state exit during switch upstream function removal\n\nBefore 456d8aa37d0f (\"PCI/ASPM: Disable ASPM on MFD function removal to\navoid use-after-free\"), we would free the ASPM link only after the last\nfunction on the bus pertaining to the given link was removed.\n\nThat was too late. If function 0 is removed before sibling function,\nlink->downstream would point to free'd memory after.\n\nAfter above change, we freed the ASPM parent link state upon any function\nremoval on the bus pertaining to a given link.\n\nThat is too early. If the link is to a PCIe switch with MFD on the upstream\nport, then removing functions other than 0 first would free a link which\nstill remains parent_link to the remaining downstream ports.\n\nThe resulting GPFs are especially frequent during hot-unplug, because\npciehp removes devices on the link bus in reverse order.\n\nOn that switch, function 0 is the virtual P2P bridge to the internal bus.\nFree exactly when function 0 is removed -- before the parent link is\nobsolete, but after all subordinate links are gone.\n\n[kwilczynski: commit log]"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: PCI/ASPM: Corrección de la salida del estado del enlace durante la eliminación de la función ascendente del conmutador. Antes de la versión 456d8aa37d0f (\"PCI/ASPM: Deshabilitar ASPM al eliminar la función MFD para evitar el use-after-free\"), liberábamos el enlace ASPM solo después de eliminar la última función del bus correspondiente al enlace en cuestión. Era demasiado tarde. Si la función 0 se elimina antes que la función hermana, enlace-&gt;descendente apuntaría a la memoria liberada después. Tras el cambio mencionado, liberábamos el estado del enlace principal ASPM al eliminar cualquier función del bus correspondiente a un enlace determinado. Era demasiado pronto. Si el enlace es a un conmutador PCIe con MFD en el puerto ascendente, eliminar primero las funciones distintas de la 0 liberaría un enlace que aún permanece como parent_link para los puertos descendentes restantes. Los GPF resultantes son especialmente frecuentes durante la desconexión en caliente, ya que pciehp elimina los dispositivos del bus de enlace en orden inverso. En ese conmutador, la función 0 es el puente P2P virtual al bus interno. Se libera exactamente cuando se elimina la función 0: antes de que el enlace principal quede obsoleto, pero después de que todos los enlaces subordinados desaparezcan. [kwilczynski: registro de confirmaciones]"
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 7.8,
          "baseSeverity": "HIGH",
          "attackVector": "LOCAL",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 1.8,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-416"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.4.251",
              "versionEndExcluding": "5.5",
              "matchCriteriaId": "44DA80F9-E53B-4731-AC41-BD9BAFB7661D"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.10.188",
              "versionEndExcluding": "5.11",
              "matchCriteriaId": "6D42E8C7-CD33-432A-AC09-DC524C88ECE4"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "5.15.121",
              "versionEndExcluding": "5.16",
              "matchCriteriaId": "F3AFFFEE-0707-48FE-B692-4AB92FDAA922"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.1.39",
              "versionEndExcluding": "6.2",
              "matchCriteriaId": "43B56BBD-C68E-4AF0-AEFF-3863C4B70AC2"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.3.13",
              "versionEndExcluding": "6.4",
              "matchCriteriaId": "9058C05B-5440-4D83-834D-2E94FC46621C"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
              "versionStartIncluding": "6.4.4",
              "versionEndExcluding": "6.15",
              "matchCriteriaId": "2C10C69F-6357-4624-ADB7-90D4E8729AD5"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/cbf937dcadfd571a434f8074d057b32cd14fbea5",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
      "tags": [
        "Patch"
      ]
    }
  ]
}