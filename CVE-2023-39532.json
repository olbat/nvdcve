{
  "id": "CVE-2023-39532",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2023-08-08T17:15:09.607",
  "lastModified": "2024-11-21T08:15:37.100",
  "vulnStatus": "Modified",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "SES is a JavaScript environment that allows safe execution of arbitrary programs in Compartments. In version 0.18.0 prior to 0.18.7, 0.17.0 prior to 0.17.1, 0.16.0 prior to 0.16.1, 0.15.0 prior to 0.15.24, 0.14.0 prior to 0.14.5, an 0.13.0 prior to 0.13.5, there is a hole in the confinement of guest applications under SES that may manifest as either the ability to exfiltrate information or execute arbitrary code depending on the configuration and implementation of the surrounding host.\n\nGuest program running inside a Compartment with as few as no endowments can gain access to the surrounding host’s dynamic import by using dynamic import after the spread operator, like `{...import(arbitraryModuleSpecifier)}`.\n\nOn the web or in web extensions, a Content-Security-Policy following ordinary best practices likely mitigates both the risk of exfiltration and execution of arbitrary code, at least limiting the modules that the attacker can import to those that are already part of the application. However, without a Content-Security-Policy, dynamic import can be used to issue HTTP requests for either communication through the URL or for the execution of code reachable from that origin.\n\nWithin an XS worker, an attacker can use the host’s module system to the extent that the host has been configured. This typically only allows access to module code on the host’s file system and is of limited use to an attacker.\n\nWithin Node.js, the attacker gains access to Node.js’s module system. Importing the powerful builtins is not useful except insofar as there are side-effects and tempered because dynamic import returns a promise. Spreading a promise into an object renders the promises useless. However, Node.js allows importing data URLs, so this is a clear path to arbitrary execution.\n\nVersions 0.18.7, 0.17.1, 0.16.1, 0.15.24, 0.14.5, and 0.13.5 contain a patch for this issue. Some workarounds are available. On the web, providing a suitably constrained Content-Security-Policy mitigates most of the threat. With XS, building a binary that lacks the ability to load modules at runtime mitigates the entirety of the threat. That will look like an implementation of `fxFindModule` in a file like `xsPlatform.c` that calls `fxRejectModuleFile`."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 9.8,
          "baseSeverity": "CRITICAL",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 9.8,
          "baseSeverity": "CRITICAL",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-20"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "NVD-CWE-noinfo"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:*:*:*:*:*:node.js:*:*",
              "versionStartIncluding": "0.13.0",
              "versionEndExcluding": "0.13.5",
              "matchCriteriaId": "4E1EC633-C037-4C04-871D-8A99CC95341E"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:*:*:*:*:*:node.js:*:*",
              "versionStartIncluding": "0.14.0",
              "versionEndExcluding": "0.14.5",
              "matchCriteriaId": "FE092E36-42AD-4ECB-9D1D-1F055255E807"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:*:*:*:*:*:node.js:*:*",
              "versionStartIncluding": "0.15.0",
              "versionEndExcluding": "0.15.24",
              "matchCriteriaId": "E5511281-9D66-439E-999A-EB5EEEA5C4C2"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:*:*:*:*:*:node.js:*:*",
              "versionStartIncluding": "0.18.0",
              "versionEndExcluding": "0.18.7",
              "matchCriteriaId": "BABF5176-1760-461C-9B4F-C16D499C7F5F"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:0.16.0:*:*:*:*:node.js:*:*",
              "matchCriteriaId": "530B00E7-D900-4C6B-8078-C163041FF77A"
            },
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:agoric:ses:0.17.0:*:*:*:*:node.js:*:*",
              "matchCriteriaId": "35FEBC71-1F8D-4B91-95CA-3FB5F051450D"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/endojs/endo/commit/fc90c6429604dc79ce8e3355e236ccce2bada041",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/endojs/endo/security/advisories/GHSA-9c4h-3f7h-322r",
      "source": "security-advisories@github.com",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/endojs/endo/commit/fc90c6429604dc79ce8e3355e236ccce2bada041",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch"
      ]
    },
    {
      "url": "https://github.com/endojs/endo/security/advisories/GHSA-9c4h-3f7h-322r",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Exploit",
        "Patch",
        "Vendor Advisory"
      ]
    }
  ]
}