{
  "id": "CVE-2025-50472",
  "sourceIdentifier": "cve@mitre.org",
  "published": "2025-08-01T16:15:41.750",
  "lastModified": "2025-08-04T15:06:15.833",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "The modelscope/ms-swift library thru 2.6.1 is vulnerable to arbitrary code execution through deserialization of untrusted data within the `load_model_meta()` function of the `ModelFileSystemCache()` class. Attackers can execute arbitrary code and commands by crafting a malicious serialized `.mdl` payload, exploiting the use of `pickle.load()` on data from potentially untrusted sources. This vulnerability allows for remote code execution (RCE) by deceiving victims into loading a seemingly harmless checkpoint during a normal training process, thereby enabling attackers to execute arbitrary code on the targeted machine. Note that the payload file is a hidden file, making it difficult for the victim to detect tampering. More importantly, during the model training process, after the `.mdl` file is loaded and executes arbitrary code, the normal training process remains unaffected'meaning the user remains unaware of the arbitrary code execution."
    },
    {
      "lang": "es",
      "value": "La librería modelscope/ms-swift hasta la versión 2.6.1 es vulnerable a la ejecución de código arbitrario mediante la deserialización de datos no confiables dentro de la función `load_model_meta()` de la clase `ModelFileSystemCache()`. Los atacantes pueden ejecutar código y comandos arbitrarios creando un payload `.mdl` serializado malicioso, aprovechando el uso de `pickle.load()` en datos de fuentes potencialmente no confiables. Esta vulnerabilidad permite la ejecución remota de código (RCE) al engañar a las víctimas para que carguen un punto de control aparentemente inofensivo durante un proceso de entrenamiento normal, lo que permite a los atacantes ejecutar código arbitrario en el equipo objetivo. Tenga en cuenta que el archivo de payload es un archivo oculto, lo que dificulta que la víctima detecte la manipulación. Más importante aún, durante el proceso de entrenamiento del modelo, después de que el archivo `.mdl` se carga y ejecuta código arbitrario, el proceso de entrenamiento normal no se ve afectado, lo que significa que el usuario no es consciente de la ejecución del código arbitrario."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 9.8,
          "baseSeverity": "CRITICAL",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-502"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/modelscope/ms-swift/blob/ab38bff0387a86fd9f068246c326ee7b0d5ed139/swift/hub/utils/caching.py#L141",
      "source": "cve@mitre.org"
    },
    {
      "url": "https://github.com/xhjy2020/CVE-2025-50472",
      "source": "cve@mitre.org"
    }
  ]
}