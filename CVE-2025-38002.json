{
  "id": "CVE-2025-38002",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-06-06T14:15:22.313",
  "lastModified": "2025-06-26T15:15:22.843",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/fdinfo: grab ctx->uring_lock around io_uring_show_fdinfo()\n\nNot everything requires locking in there, which is why the 'has_lock'\nvariable exists. But enough does that it's a bit unwieldy to manage.\nWrap the whole thing in a ->uring_lock trylock, and just return\nwith no output if we fail to grab it. The existing trylock() will\nalready have greatly diminished utility/output for the failure case.\n\nThis fixes an issue with reading the SQE fields, if the ring is being\nactively resized at the same time."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: io_uring/fdinfo: captura ctx-&gt;uring_lock en torno a io_uring_show_fdinfo(). No todo requiere bloqueo, razón por la cual existe la variable 'has_lock'. Sin embargo, suficientes requieren bloqueo como para que sea un poco difícil de manejar. Envuelva todo en un trylock `-&gt;uring_lock` y simplemente devuelva sin salida si no logramos capturarlo. El trylock() existente ya tendrá una utilidad/salida considerablemente reducida en caso de fallo. Esto soluciona un problema con la lectura de los campos SQE si el anillo se está redimensionando activamente al mismo tiempo."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/bdb7d2ec2e31c46c45d1f32667dfa8216a72705e",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/d871198ee431d90f5308d53998c1ba1d5db5619a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://project-zero.issues.chromium.org/issues/417522668",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}