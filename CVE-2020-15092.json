{
  "id": "CVE-2020-15092",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2020-07-09T19:15:11.290",
  "lastModified": "2024-11-21T05:04:47.423",
  "vulnStatus": "Modified",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In TimelineJS before version 3.7.0, some user data renders as HTML. An attacker could implement an XSS exploit with maliciously crafted content in a number of data fields. This risk is present whether the source data for the timeline is stored on Google Sheets or in a JSON configuration file. Most TimelineJS users configure their timeline with a Google Sheets document. Those users are exposed to this vulnerability if they grant write access to the document to a malicious inside attacker, if the access of a trusted user is compromised, or if they grant public write access to the document. Some TimelineJS users configure their timeline with a JSON document. Those users are exposed to this vulnerability if they grant write access to the document to a malicious inside attacker, if the access of a trusted user is compromised, or if write access to the system hosting that document is otherwise compromised. Version 3.7.0 of TimelineJS addresses this in two ways. For content which is intended to support limited HTML markup for styling and linking, that content is \"sanitized\" before being added to the DOM. For content intended for simple text display, all markup is stripped. Very few users of TimelineJS actually install the TimelineJS code on their server. Most users publish a timeline using a URL hosted on systems we control. The fix for this issue is published to our system such that **those users will automatically begin using the new code**. The only exception would be users who have deliberately edited the embed URL to \"pin\" their timeline to an earlier version of the code. Some users of TimelineJS use it as a part of a wordpress plugin (knight-lab-timelinejs). Version 3.7.0.0 of that plugin and newer integrate the updated code. Users are encouraged to update the plugin rather than manually update the embedded version of TimelineJS."
    },
    {
      "lang": "es",
      "value": "En TimelineJS antes de la versión 3.7.0, algunos datos de usuario se renderizan como HTML. Un atacante podría implementar una explotación de tipo XSS con contenido diseñado maliciosamente en varios campos de datos. Este riesgo está presente si los datos de origen para la línea de tiempo son almacenados en Google Sheets o en un archivo de configuración JSON. La mayoría de los usuarios de TimelineJS configuran su línea de tiempo con un documento de Google Sheets. Esos usuarios están expuestos a esta vulnerabilidad si otorgan acceso de escritura al documento a un atacante interno malicioso, si el acceso de un usuario confiable es comprometido o si otorgan acceso de escritura pública al documento. Algunos usuarios de TimelineJS configuran su línea de tiempo con un documento JSON. Esos usuarios están expuestos a esta vulnerabilidad si otorgan acceso de escritura al documento a un atacante interno malicioso, si el acceso de un usuario confiable es comprometido o si el acceso de escritura al sistema que aloja ese documento esta comprometido de otra manera. La versión 3.7.0 de TimelineJS aborda esto de dos maneras. Para el contenido que es destinado a admitir un marcado HTML limitado para el estilo y la vinculación, ese contenido es \"\"sanitized\"\" antes de agregarse al DOM. Para el contenido previsto para la visualización de texto simple, todo el marcado es eliminado. Muy pocos usuarios de TimelineJS realmente instalan el código TimelineJS en su servidor. La mayoría de los usuarios publican una línea de tiempo usando una URL alojada en los sistemas que controlamos. La corrección para este problema es publicado en nuestro sistema de manera que **esos usuarios comenzarán a usar automáticamente el nuevo código**. La única excepción sería que los usuarios que hayan editado deliberadamente la URL insertada para hacer \"\"pin\"\" en su línea de tiempo a una versión anterior del código. Algunos usuarios de TimelineJS lo usan como parte de un plugin de wordpress (knight-lab-timelinejs). La versión 3.7.0.0 de ese plugin y las más nuevas integran el código actualizado. Se exhorta a los usuarios a actualizar el plugin en lugar de actualizar manualmente la versión insertada de TimelineJS"
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 7.2,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "HIGH",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 1.2,
        "impactScore": 5.9
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N",
          "baseScore": 4.8,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "HIGH",
          "userInteraction": "REQUIRED",
          "scope": "CHANGED",
          "confidentialityImpact": "LOW",
          "integrityImpact": "LOW",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 1.7,
        "impactScore": 2.7
      }
    ],
    "cvssMetricV2": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "2.0",
          "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N",
          "baseScore": 3.5,
          "accessVector": "NETWORK",
          "accessComplexity": "MEDIUM",
          "authentication": "SINGLE",
          "confidentialityImpact": "NONE",
          "integrityImpact": "PARTIAL",
          "availabilityImpact": "NONE"
        },
        "baseSeverity": "LOW",
        "exploitabilityScore": 6.8,
        "impactScore": 2.9,
        "acInsufInfo": false,
        "obtainAllPrivilege": false,
        "obtainUserPrivilege": false,
        "obtainOtherPrivilege": false,
        "userInteractionRequired": true
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-79"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:northwestern:timelinejs:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "3.7.0",
              "matchCriteriaId": "F2C241DA-2468-411B-8EDB-200E505AC655"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/NUKnightLab/TimelineJS3/security/advisories/GHSA-2jpm-827p-j44g",
      "source": "security-advisories@github.com",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://knightlab.northwestern.edu/posts/",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    },
    {
      "url": "https://github.com/NUKnightLab/TimelineJS3/security/advisories/GHSA-2jpm-827p-j44g",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Patch",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://knightlab.northwestern.edu/posts/",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ]
}