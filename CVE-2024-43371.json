{
  "id": "CVE-2024-43371",
  "sourceIdentifier": "security-advisories@github.com",
  "published": "2024-08-21T15:15:09.190",
  "lastModified": "2024-08-23T16:20:10.060",
  "vulnStatus": "Analyzed",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "CKAN is an open-source data management system for powering data hubs and data portals. There are a number of CKAN plugins, including XLoader, DataPusher, Resource proxy and ckanext-archiver, that work by downloading the contents of local or remote files in order to perform some actions with their contents (e.g. pushing to the DataStore, streaming contents or saving a local copy). All of them use the resource URL, and there are currently no checks to limit what URLs can be requested. This means that a malicious (or unaware) user can create a resource with a URL pointing to a place where they should not have access in order for one of the previous tools to retrieve it (known as a Server Side Request Forgery). Users wanting to protect against these kinds of attacks can use one or a combination of the following approaches: (1) Use a separate HTTP proxy like Squid that can be used to allow / disallow IPs, domains etc as needed, and make CKAN extensions aware of this setting via the ckan.download_proxy config option. (2) Implement custom firewall rules to prevent access to restricted resources. (3) Use custom validators on the resource url field to block/allow certain domains or IPs. All latest versions of the plugins listed above support the ckan.download_proxy settings. Support for this setting in the Resource Proxy plugin was included in CKAN 2.10.5 and 2.11.0."
    },
    {
      "lang": "es",
      "value": "CKAN es un sistema de gestión de datos de código abierto para impulsar centros y portales de datos. Hay una serie de complementos de CKAN, incluidos XLoader, DataPusher, Resource proxy y ckanext-archiver, que funcionan descargando el contenido de archivos locales o remotos para realizar algunas acciones con sus contenidos (por ejemplo, enviar al DataStore, transmitir contenidos o guardando una copia local). Todos ellos utilizan la URL del recurso y actualmente no existen comprobaciones para limitar las URL que se pueden solicitar. Esto significa que un usuario malintencionado (o inconsciente) puede crear un recurso con una URL que apunte a un lugar al que no debería tener acceso para que una de las herramientas anteriores lo recupere (conocido como Server Side Request Forgery). Los usuarios que deseen protegerse contra este tipo de ataques pueden usar uno o una combinación de los siguientes enfoques: (1) Usar un proxy HTTP separado como Squid que se puede usar para permitir o no permitir IP, dominios, etc., según sea necesario, y alertar a las extensiones CKAN. de esta configuración a través de la opción de configuración ckan.download_proxy. (2) Implementar reglas de firewall personalizadas para evitar el acceso a recursos restringidos. (3) Utilice validadores personalizados en el campo URL del recurso para bloquear/permitir ciertos dominios o IP. Todas las versiones más recientes de los complementos enumerados anteriormente admiten la configuración de ckan.download_proxy. La compatibilidad con esta configuración en el complemento Resource Proxy se incluyó en CKAN 2.10.5 y 2.11.0."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "security-advisories@github.com",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:U/C:H/I:N/A:N",
          "baseScore": 4.5,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "HIGH",
          "userInteraction": "REQUIRED",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "NONE",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 0.9,
        "impactScore": 3.6
      },
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N",
          "baseScore": 6.5,
          "baseSeverity": "MEDIUM",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "NONE",
          "availabilityImpact": "NONE"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 3.6
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security-advisories@github.com",
      "type": "Secondary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-918"
        }
      ]
    },
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-918"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:okfn:ckan:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "2.10.5",
              "matchCriteriaId": "5E427B7D-6C9B-4766-8FF7-A0DF9B5EEAE8"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/ckan/ckan/security/advisories/GHSA-g9ph-j5vj-f8wm",
      "source": "security-advisories@github.com",
      "tags": [
        "Vendor Advisory"
      ]
    }
  ]
}