{
  "id": "CVE-2022-3918",
  "sourceIdentifier": "cve@forums.swift.org",
  "published": "2023-01-20T20:15:10.617",
  "lastModified": "2025-04-02T16:15:21.630",
  "vulnStatus": "Modified",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "A program using FoundationNetworking in swift-corelibs-foundation is potentially vulnerable to CRLF ( ) injection in URLRequest headers. In this vulnerability, a client can insert one or several CRLF sequences into a URLRequest header value. When that request is sent via URLSession to an HTTP server, the server may interpret the content after the CRLF as extra headers, or even a second request. For example, consider a URLRequest to http://example.com/ with the GET method. Suppose we set the URLRequest header \"Foo\" to the value \"Bar Extra-Header: Added GET /other HTTP/1.1\". When this request is sent, it will appear to the server as two requests: GET / HTTP/1.1 Foo: Bar Extra-Header: Added GET /other HTTP/1.1 In this manner, the client is able to inject extra headers and craft an entirely new request to a separate path, despite only making one API call in URLSession. If a developer has total control over the request and its headers, this vulnerability may not pose a threat. However, this vulnerability escalates if un-sanitized user input is placed in header values. If so, a malicious user could inject new headers or requests to an intermediary or backend server. Developers should be especially careful to sanitize user input in this case, or upgrade their version of swift-corelibs-foundation to include the patch below."
    },
    {
      "lang": "es",
      "value": "Un programa que utiliza FoundationNetworking en swift-corelibs-foundation es potencialmente vulnerable a la inyección CRLF () en los encabezados URLRequest. En esta vulnerabilidad, un cliente puede insertar una o varias secuencias CRLF en un valor de encabezado URLRequest. Cuando esa solicitud se envía a través de URLSession a un servidor HTTP, el servidor puede interpretar el contenido después del CRLF como encabezados adicionales, o incluso una segunda solicitud. Por ejemplo, considere una URLRequest a http://example.com/ con el método GET. Supongamos que configuramos el encabezado de URLRequest \"Foo\" con el valor \"Bar Extra-Header: Added GET /other HTTP/1.1\". Cuando se envía esta solicitud, aparecerá en el servidor como dos solicitudes: GET / HTTP/1.1 Foo: Bar Extra-Header: Added GET /other HTTP/1.1 De esta manera, el cliente puede inyectar encabezados adicionales y crear un solicitud completamente nueva a una ruta separada, a pesar de realizar solo una llamada API en URLSession. Si un desarrollador tiene control total sobre la solicitud y sus encabezados, es posible que esta vulnerabilidad no represente una amenaza. Sin embargo, esta vulnerabilidad aumenta si la entrada del usuario no desinfectada se coloca en los valores del encabezado. Si es así, un usuario malintencionado podría inyectar nuevos encabezados o solicitudes a un servidor intermediario o backend. En este caso, los desarrolladores deben tener especial cuidado al desinfectar la entrada del usuario o actualizar su versión de swift-corelibs-foundation para incluir el parche siguiente."
    }
  ],
  "metrics": {
    "cvssMetricV31": [
      {
        "source": "nvd@nist.gov",
        "type": "Primary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 8.8,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 5.9
      },
      {
        "source": "134c704f-9b21-4f2e-91b3-4a467353bcc0",
        "type": "Secondary",
        "cvssData": {
          "version": "3.1",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "baseScore": 8.8,
          "baseSeverity": "HIGH",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "LOW",
          "userInteraction": "NONE",
          "scope": "UNCHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH"
        },
        "exploitabilityScore": 2.8,
        "impactScore": 5.9
      }
    ]
  },
  "weaknesses": [
    {
      "source": "nvd@nist.gov",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-74"
        }
      ]
    }
  ],
  "configurations": [
    {
      "nodes": [
        {
          "operator": "OR",
          "negate": false,
          "cpeMatch": [
            {
              "vulnerable": true,
              "criteria": "cpe:2.3:a:apple:swift_foundation:*:*:*:*:*:*:*:*",
              "versionEndExcluding": "5.7.3",
              "matchCriteriaId": "34F547E9-A3BE-42AF-990A-9A9D333F3884"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/apple/swift-corelibs-foundation/security/advisories/GHSA-4pp3-mpf2-rj63",
      "source": "cve@forums.swift.org",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    },
    {
      "url": "https://github.com/apple/swift-corelibs-foundation/security/advisories/GHSA-4pp3-mpf2-rj63",
      "source": "af854a3a-2127-422b-91ae-364da2661108",
      "tags": [
        "Mitigation",
        "Third Party Advisory"
      ]
    }
  ]
}